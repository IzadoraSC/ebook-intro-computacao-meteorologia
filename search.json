[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Introdu√ß√£o √† Computa√ß√£o Aplicada √†s Ci√™ncias Atmosf√©ricas",
    "section": "",
    "text": "1 Apresenta√ß√£o\nEste √© um material did√°tico aberto desenvolvido para apoiar o ensino da disciplina Introdu√ß√£o √† Computa√ß√£o Aplicada √†s Ci√™ncias Atmosf√©ricas, do curso de gradua√ß√£o em Meteorologia da UEMA - S√£o Lu√≠s-MA, Brasil.\nO objetivo √© fornecer uma base s√≥lida em programa√ß√£o com R, aplicada √† an√°lise e visualiza√ß√£o de dados ambientais e clim√°ticos.\nEste produto est√° sendo desenvolvido utilizando Quarto books.",
    "crumbs": [
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Apresenta√ß√£o</span>"
    ]
  },
  {
    "objectID": "capitulos/00-cronograma.html",
    "href": "capitulos/00-cronograma.html",
    "title": "1¬† Conte√∫do",
    "section": "",
    "text": "1.1 Fundamentos de Programa√ß√£o",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Conte√∫do</span>"
    ]
  },
  {
    "objectID": "capitulos/00-cronograma.html#fundamentos-de-programa√ß√£o",
    "href": "capitulos/00-cronograma.html#fundamentos-de-programa√ß√£o",
    "title": "1¬† Conte√∫do",
    "section": "",
    "text": "Introdu√ß√£o √† programa√ß√£o\nTipos de dados\nEstruturas de controle\nFun√ß√µes",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Conte√∫do</span>"
    ]
  },
  {
    "objectID": "capitulos/00-cronograma.html#estruturas-de-dados",
    "href": "capitulos/00-cronograma.html#estruturas-de-dados",
    "title": "1¬† Conte√∫do",
    "section": "1.2 Estruturas de Dados",
    "text": "1.2 Estruturas de Dados\n\nVetores e listas\nData frames e tabelas\nMatrizes",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Conte√∫do</span>"
    ]
  },
  {
    "objectID": "capitulos/00-cronograma.html#manipula√ß√£o-de-dados",
    "href": "capitulos/00-cronograma.html#manipula√ß√£o-de-dados",
    "title": "1¬† Conte√∫do",
    "section": "1.3 Manipula√ß√£o de Dados",
    "text": "1.3 Manipula√ß√£o de Dados\n\nIndexa√ß√£o e filtragem\nLimpeza de dados\nLinhas e Colunas",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Conte√∫do</span>"
    ]
  },
  {
    "objectID": "capitulos/01-introducao.html",
    "href": "capitulos/01-introducao.html",
    "title": "3¬† Cap√≠tulo 1 - Introdu√ß√£o √† computa√ß√£o para meteorologia",
    "section": "",
    "text": "3.1 O que √© um algoritmo?\nN√£o precisamos nos tornar programadores profissionais ao final da disciplina. Por√©m, precisamos ao menos olhar para um c√≥digo e conserguir compreender e interpretar (mas ir al√©m disso n√£o √© pro√≠bido, inclusive recomendamos).\nUm algoritmo √© uma sequ√™ncia finita de passos l√≥gicos bem definidos para resolver um problema ou realizar uma tarefa.\nNo contexto da Meteorologia, por exemplo, podemos ter algoritmos para:",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Cap√≠tulo 1 - Introdu√ß√£o √† computa√ß√£o para meteorologia</span>"
    ]
  },
  {
    "objectID": "capitulos/01-introducao.html#o-que-√©-um-algoritmo",
    "href": "capitulos/01-introducao.html#o-que-√©-um-algoritmo",
    "title": "3¬† Cap√≠tulo 1 - Introdu√ß√£o √† computa√ß√£o para meteorologia",
    "section": "",
    "text": "Calcular a m√©dia de temperatura de uma semana\nVerificar se um valor de precipita√ß√£o indica ‚Äúchuva forte‚Äù\nClassificar dias como quentes, amenos ou frios",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Cap√≠tulo 1 - Introdu√ß√£o √† computa√ß√£o para meteorologia</span>"
    ]
  },
  {
    "objectID": "capitulos/01-introducao.html#formas-de-representar-algoritmos",
    "href": "capitulos/01-introducao.html#formas-de-representar-algoritmos",
    "title": "3¬† Cap√≠tulo 1 - Introdu√ß√£o √† computa√ß√£o para meteorologia",
    "section": "3.2 Formas de representar algoritmos",
    "text": "3.2 Formas de representar algoritmos\nExistem diversas formas de representar algoritmos antes de escrev√™-los em uma linguagem de programa√ß√£o. As principais s√£o:\n\n3.2.1 üìò 1. Descri√ß√£o narrativa (portugu√™s estruturado)\n\nExemplo: Calcular a m√©dia de tr√™s temperaturas:\n\nLeia tr√™s temperaturas\nCalcule a m√©dia\nMostre o resultado\n\n\n\n\n3.2.2 üß≠ 2. Fluxograma\n\nUm fluxograma representa graficamente o algoritmo usando formas geom√©tricas (ret√¢ngulos, losangos, setas).\n\n(Sugest√£o: voc√™ pode usar ferramentas como draw.io para desenhar fluxogramas.)\n\n\n3.2.3 üíª 3. Pseudoc√≥digo (Portugol)\n\nLinguagem intermedi√°ria entre a linguagem natural e linguagem de programa√ß√£o.\nUtilizaremos o Visualg para executar pseudoc√≥digos.",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Cap√≠tulo 1 - Introdu√ß√£o √† computa√ß√£o para meteorologia</span>"
    ]
  },
  {
    "objectID": "capitulos/01-introducao.html#exemplo-pr√°tico-completo",
    "href": "capitulos/01-introducao.html#exemplo-pr√°tico-completo",
    "title": "3¬† Cap√≠tulo 1 - Introdu√ß√£o √† computa√ß√£o para meteorologia",
    "section": "3.3 üí° Exemplo pr√°tico completo",
    "text": "3.3 üí° Exemplo pr√°tico completo\n\n3.3.1 Objetivo: Calcular a m√©dia de temperatura de 3 dias\n\n\n3.3.2 üìò Descri√ß√£o narrativa:\n\nLeia tr√™s valores de temperatura\nSome os valores\nDivida a soma por 3\nMostre o resultado\n\n\n\n3.3.3 üíª Pseudoc√≥digo em Portugol (Visualg):\nalgoritmo \"media_temperatura\"\nvar\n   t1, t2, t3, media: real\ninicio\n   escreva(\"Digite a primeira temperatura: \")\n   leia(t1)\n   escreva(\"Digite a segunda temperatura: \")\n   leia(t2)\n   escreva(\"Digite a terceira temperatura: \")\n   leia(t3)\n\n   media := (t1 + t2 + t3) / 3\n\n   escreval(\"A m√©dia das temperaturas √©: \", media)\nfimalgoritmo",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Cap√≠tulo 1 - Introdu√ß√£o √† computa√ß√£o para meteorologia</span>"
    ]
  },
  {
    "objectID": "capitulos/01-introducao.html#pr√°tica-proposta",
    "href": "capitulos/01-introducao.html#pr√°tica-proposta",
    "title": "3¬† Cap√≠tulo 1 - Introdu√ß√£o √† computa√ß√£o para meteorologia",
    "section": "3.4 ‚úçÔ∏è Pr√°tica proposta",
    "text": "3.4 ‚úçÔ∏è Pr√°tica proposta\n\n\n\n\n\n\nAgora fa√ßa voc√™ mesmo!\n\n\n\nCrie um algoritmo em pseudoc√≥digo que leia a temperatura m√≠nima e m√°xima do dia,\ncalcule a amplitude t√©rmica e exiba o resultado.\nDepois, implemente esse algoritmo no Visualg!",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Cap√≠tulo 1 - Introdu√ß√£o √† computa√ß√£o para meteorologia</span>"
    ]
  },
  {
    "objectID": "capitulos/02-fundamentos-programacao.html",
    "href": "capitulos/02-fundamentos-programacao.html",
    "title": "\n4¬† Cap√≠tulo 2 ‚Äì Fundamentos de Programa√ß√£o\n",
    "section": "",
    "text": "4.1 Criando Projeto No RSTUDIO (.RPROJ)\n# A fun√ß√£o getwd() pode ser utilizada para verificar o diret√≥rio de trabalho atual.\n#getwd() \n\n# A fun√ß√£o setwd()  pode ser utilizada para mudar o diret√≥rio de trabalho. \n#setwd() \n## Ex.: setwd('C:/Users/Documentos/R')\n\n## Nota: Na fun√ß√£o `setwd()`, devemos usar a barra obl√≠qua (`/`) para definir o caminho.",
    "crumbs": [
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Cap√≠tulo 2 ‚Äì Fundamentos de Programa√ß√£o</span>"
    ]
  },
  {
    "objectID": "capitulos/02-fundamentos-programacao.html#criando-projeto-no-rstudio-.rproj",
    "href": "capitulos/02-fundamentos-programacao.html#criando-projeto-no-rstudio-.rproj",
    "title": "\n4¬† Cap√≠tulo 2 ‚Äì Fundamentos de Programa√ß√£o\n",
    "section": "",
    "text": "Trabalhar com programa√ß√£o exige um n√≠vel de organiza√ß√£o, que √© importante para manter a efici√™ncia e reprodutibilidade. No R, existem algumas maneiras de aumentar esse n√≠vel de organiza√ß√£o, como Rprojects e controle do diret√≥rio de trabalho.\nO diret√≥rio de trabalho √©, em suma, a pasta onde o R vai procurar os arquivos na hora de ler informa√ß√µes e vai gravar os arquivos na hora de salvar informa√ß√µes.\nA defini√ß√£o do diret√≥rio de trabalho √© uma etapa opcional, mas que pode economizar muito tempo no processo de an√°lise de dados.",
    "crumbs": [
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Cap√≠tulo 2 ‚Äì Fundamentos de Programa√ß√£o</span>"
    ]
  },
  {
    "objectID": "capitulos/02-fundamentos-programacao.html#vari√°veis-tipos-de-dados-e-operadores",
    "href": "capitulos/02-fundamentos-programacao.html#vari√°veis-tipos-de-dados-e-operadores",
    "title": "\n4¬† Cap√≠tulo 2 ‚Äì Fundamentos de Programa√ß√£o\n",
    "section": "\n4.2 Vari√°veis, Tipos de Dados e Operadores",
    "text": "4.2 Vari√°veis, Tipos de Dados e Operadores\n\nVari√°veis\n\n\nVari√°vel: √© o elemento que possu√≠ nome e tipo, e guarda dentro de si dados ou informa√ß√µes.\nOs dados s√£o armazenados temporariamente em vari√°veis para que sejam processados de acordo com as especifica√ß√µes do algoritmo.\n\n\n\nFigura 3. Vari√°veis\n\n\nTipos de dados\n\n\nOs dados (e seus diversos tipos) s√£o os blocos b√°sicos da programa√ß√£o. Eles representam uma unidade ou um elemento de informa√ß√£o que pode ser acessado atrav√©s de um identificador - por exemplo, uma vari√°vel.\n\nTipos de dados (primitivos):\n-   INT ou n√∫mero inteiro: valores num√©ricos inteiros (positivos ou negativos);\n\n-   FLOAT ou o chamado ‚Äúponto flutuante‚Äù: valores num√©ricos com casas ap√≥s a v√≠rgula (obs: em linguagem de programa√ß√£o -\\&gt; ponto) (positivos ou negativos);\n\n-   BOOLEAN ou booleanos: representado apenas por dois valores, ‚Äúverdadeiro‚Äù e ‚Äúfalso‚Äù (obs: em linguagem de programa√ß√£o -\\&gt; TRUE e FALSE. Tamb√©m chamados de operadores l√≥gicos;\n\n-   TEXT: sequ√™ncias ou cadeias de caracteres, utilizados para manipular textos e/ou outros tipos de dados n√£o num√©ricos ou booleanos, como hashes de criptografia.\n\n\nFigura 4. Tipo de Dados\n\n\n\nObjetos\nTrabalhamos, em linguagem R, com objetos que podem ser gerados ou manipulados.\nUm objeto √© qualquer coisa que pode ser atribu√≠da a uma vari√°vel.\nTipos de objetos no R:\n\n\nTipo\nDescri√ß√£o\n\n\n\ncharacter\nTextos ou caracteres\n\n\nnumeric\nN√∫meros inteiros ou reais\n\n\nlogical\nVerdadeiro ou falso (TRUE/FALSE)\n\n\ncomplex\nN√∫meros complexos\n\n\nlist\nCombina diferentes tipos num mesmo objeto\n\n\nfunction\nComandos\n\n\n\n\nOperadores\n\n\nChamamos de operadores aritm√©ticos o conjuntos de s√≠mbolos que representam as opera√ß√µes b√°sicas da matem√°tica.\nDenominados express√£o l√≥gica aquela cujo operadores s√£o l√≥gicos ou relacionais e cujos operandos s√£o reala√ß√µes ou vari√°vies ou constantes do tipo l√≥gico.\n\n\n\nFigura 5. Operadores no R (Paradis, 2005, p.25)\n\n\nAtalhos\n\n\n\nTeclas\nDescri√ß√£o\n\n\n\n\nCrtl + +\n\nAumenta a letra da interface do RStudio\n\n\n\nCrtl + -\nDiminui a letra da interface do RStudio\n\n\n\nCrtl + ENTER\n\nExecuta uma linha de c√≥digo\n\n\n\nCrtl + C\n\nComenta um ou mais linhas do Script\n\n\n\nCrtl + Shift + R\n\nCria uma se√ß√£o no Script\n\n\n\nAlt + -\nAdiciona o s√≠mbolo de atribui√ß√£o -&gt;\n\n\n\n\nCrtl + Shift + N\n\nCriar um novo arquivo Script\n\n\n\n\n4.2.1 Exemplos:\n\nnome &lt;- \"Maria\"\nidade &lt;- 21\ntemperatura &lt;- 27.5\nchuva &lt;- TRUE\n\n#Conferindo o tipo de cada objeto:\nclass(nome)\n\n[1] \"character\"\n\n\n\n\n\n\n\n\nAgora fa√ßa voc√™ mesmo!\n\n\n\nTente criar objetos com valores diferentes.\nDepois, use o print() para imprimir os objetos no console.\nVoc√™ pode se basear no exemplo acima.\n\n\n\n4.2.2 Outros comandos importantes:\n\n##ATEN√á√ÉO: remova '#' para tornar a linha execut√°vel\n\n##Remover objetos\n#remove(nome_do_objeto)\n#rm(nome_do_objeto)\n\n##Verificar objetos criado\n#ls()\n\n##Verificando diret√≥rio (pasta do computador) do seu projeto\n#getwd()",
    "crumbs": [
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Cap√≠tulo 2 ‚Äì Fundamentos de Programa√ß√£o</span>"
    ]
  },
  {
    "objectID": "capitulos/02-fundamentos-programacao.html#pacotes",
    "href": "capitulos/02-fundamentos-programacao.html#pacotes",
    "title": "\n4¬† Cap√≠tulo 2 ‚Äì Fundamentos de Programa√ß√£o\n",
    "section": "\n4.3 Pacotes",
    "text": "4.3 Pacotes\n\nPacotes\n\n\nA linguagem R √© composta por um conjunto de pacotes que oferecem as funcionalidades b√°sicas da linguagem. Alguns desses pacotes s√£o base (fun√ß√µes de uso geral) e stats (fun√ß√µes para an√°lises e opera√ß√µes estat√≠sticas).\nEsses pacotes fazem parte da instala√ß√£o b√°sica do R e est√£o dispon√≠veis atrav√©s do Comprehensive R Archive Network (CRAN R).\nAl√©m dos pacotes da base do R, podemos instalar pacotes (packages) com funcionalidades espec√≠ficas criadas por colaboradores. A grande maioria desses pacotes tamb√©m est√£o dispon√≠veis atrav√©s do CRAN R, mas alguns est√£o dispon√≠veis em outras plataformas, como o GitHub.\nPara instalar um pacote do R, podemos usar a fun√ß√£o install.packages(\"nome_do_pacote\").\n\n\n##ATEN√á√ÉO: remova '#' para tornar a linha execut√°vel\n\n#install.packages(\"tidyverse\")  #linha execut√°vel\n#install.packages(\"readxl\")   #linha execut√°vel\n#install.packages(\"writexl\")   #linha execut√°vel\n\n#install.packages(\"dados\")   #linha execut√°vel\n#install.packages(\"openair\")   #linha execut√°vel\n\n##Para instalar mais de um pacote com um comando:\n\n#install.packages(c(\"ggplot2\", \"dplyr\", \"tidyr\"))   #linha execut√°vel\n\n\nAp√≥s a instala√ß√£o, o pacote deve ser carregado. Podemos usar a fun√ß√£o library(nome_do_pacote) ou require(nome_do_pacote).\n\n\n#library(tidyverse)   #linha execut√°vel\n#library(readxl)   #linha execut√°vel\n#library(writexl)   #linha execut√°vel\n\n#require(dados)   #outra fun√ß√£o para carregar\n\n#search()   # Retorna todos os pacotes carregados.\n\n#ls(\"package:readxl\")   # Lista os comandos do pacote.\n\n#tidyverse_packages()   # Lista os pacotes pertencentes ao projeto.\n\n##Para carregar mais de um pacote com um comando:\n#library(c(\"ggplot2\", \"dplyr\", \"tidyr\"))",
    "crumbs": [
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Cap√≠tulo 2 ‚Äì Fundamentos de Programa√ß√£o</span>"
    ]
  },
  {
    "objectID": "capitulos/03-estruturas-dados.html",
    "href": "capitulos/03-estruturas-dados.html",
    "title": "\n5¬† Cap√≠tulo 3 ‚Äì Estruturas de Dados\n",
    "section": "",
    "text": "5.1 Tipos de objetos no R",
    "crumbs": [
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Cap√≠tulo 3 ‚Äì Estruturas de Dados</span>"
    ]
  },
  {
    "objectID": "capitulos/03-estruturas-dados.html#tipos-de-objetos-no-r",
    "href": "capitulos/03-estruturas-dados.html#tipos-de-objetos-no-r",
    "title": "\n5¬† Cap√≠tulo 3 ‚Äì Estruturas de Dados\n",
    "section": "",
    "text": "Os tipos mais comuns de tipos de objeto s√£o: vetores (vector), data frames (tabelas), listas (list), matrizes (matrix), e array (conjunto de matrizes).",
    "crumbs": [
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Cap√≠tulo 3 ‚Äì Estruturas de Dados</span>"
    ]
  },
  {
    "objectID": "capitulos/03-estruturas-dados.html#vetores",
    "href": "capitulos/03-estruturas-dados.html#vetores",
    "title": "\n5¬† Cap√≠tulo 3 ‚Äì Estruturas de Dados\n",
    "section": "\n5.2 Vetores",
    "text": "5.2 Vetores\nVertor: √© um arranjo linear de dados\n\ntemperaturas &lt;- c(25.2, 26.1, 27.0, 26.8)\ntemperaturas[2]\n\n[1] 26.1",
    "crumbs": [
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Cap√≠tulo 3 ‚Äì Estruturas de Dados</span>"
    ]
  },
  {
    "objectID": "capitulos/03-estruturas-dados.html#fun√ß√µes-b√°sicas",
    "href": "capitulos/03-estruturas-dados.html#fun√ß√µes-b√°sicas",
    "title": "\n5¬† Cap√≠tulo 3 ‚Äì Estruturas de Dados\n",
    "section": "\n5.3 Fun√ß√µes (b√°sicas)",
    "text": "5.3 Fun√ß√µes (b√°sicas)\nFun√ß√µes base que j√° existem dentro do programa RCRAN.\n\n\nFun√ß√£o\nO que faz\n\n\n\nsum()\nSoma todos os valores\n\n\nmin()\nRetorna o menor valor\n\n\n\nmax()\nRetorna o maior valor\n\n\n\nmean()\nCalcula a m√©dia dos valores\n\n\nround()\nArredonda um n√∫mero para n casas decimais\n\n\nlength()\nInforma quantos valores h√° no vetor\n\n\nsd()\nCalcula o desvio padr√£o de uma amostra\n\n\n\n\n\n\n\n\n\nVoc√™ sabia?\n\n\n\nTodas essas fun√ß√µes fazem parte do que chamamos de ‚Äúbase R‚Äù. N√£o precisam de pacotes extras para funcionar.\n\n\n\nx &lt;- 4\ny &lt;- 6\nsum(x,y)\n\n[1] 10\n\n\n\n# Vetor com temperaturas di√°rias (em ¬∞C)\ntemperaturas &lt;- c(27.2, 28.5, 29.0, 26.8, 30.1)\n\n# M√©dia das temperaturas\nmean(temperaturas)\n\n[1] 28.32\n\n# Temperatura m√°xima\nmax(temperaturas)\n\n[1] 30.1\n\n# Temperatura m√≠nima\nmin(temperaturas)\n\n[1] 26.8\n\n# Soma total\nsum(temperaturas)\n\n[1] 141.6\n\n# N√∫mero de observa√ß√µes\nlength(temperaturas)\n\n[1] 5\n\n# Arredondar a m√©dia com 1 casa decimal\nround(mean(temperaturas), 1)\n\n[1] 28.3\n\n\n\n\n\n\n\n\nAgora fa√ßa voc√™ mesmo!\n\n\n\nCrie um vetor chamado chuvas com os valores de precipita√ß√£o (em mm) de 7 dias consecutivos.\nDepois:\n\nCalcule a soma total de chuvas\nEncontre o maior valor de precipita√ß√£o\nArredonde a m√©dia com 2 casas decimais",
    "crumbs": [
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Cap√≠tulo 3 ‚Äì Estruturas de Dados</span>"
    ]
  },
  {
    "objectID": "capitulos/03-estruturas-dados.html#data-frames",
    "href": "capitulos/03-estruturas-dados.html#data-frames",
    "title": "\n5¬† Cap√≠tulo 3 ‚Äì Estruturas de Dados\n",
    "section": "\n5.4 Data Frames",
    "text": "5.4 Data Frames\nData frames: √© uma das estruturas mais importantes para an√°lise de dados.\n\n## Exemplo 01\ndados &lt;- data.frame(\n  dia = 1:4,\n  temperatura = c(25.2, 26.1, 27.0, 26.8)\n)\n\n\n## Exemplo 02\n\n# Criando um data frame\ndados &lt;- data.frame(\n  data = as.Date('2023-01-01') + 0:6,\n  temperatura = c(27.5, 28.2, 26.9, 29.1, 30.0, 28.4, 27.8)\n)\nprint(dados)\n\n        data temperatura\n1 2023-01-01        27.5\n2 2023-01-02        28.2\n3 2023-01-03        26.9\n4 2023-01-04        29.1\n5 2023-01-05        30.0\n6 2023-01-06        28.4\n7 2023-01-07        27.8\n\nplot(dados$data, dados$temperatura, type = \"o\", col = \"blue\")\n\n\n\n\n\n\n\n\n## Exemplo 03\n\n# Criando um data frame\n\ndados &lt;- data.frame(\n  data = as.Date(\"2025-03-24\") + 0:4,\n  temperatura_min = c(22.1, 21.8, 22.4, 23.0, 21.5),\n  temperatura_max = c(30.2, 29.8, 31.0, 30.5, 29.7),\n  precipitacao = c(0.0, 5.2, 1.0, 0.0, 3.1)\n)\n\n# Visualizando os dados\nprint(dados)\n\n        data temperatura_min temperatura_max precipitacao\n1 2025-03-24            22.1            30.2          0.0\n2 2025-03-25            21.8            29.8          5.2\n3 2025-03-26            22.4            31.0          1.0\n4 2025-03-27            23.0            30.5          0.0\n5 2025-03-28            21.5            29.7          3.1\n\n# M√©dia de temperatura m√°xima\nmean(dados$temperatura_max)\n\n[1] 30.24\n\n# Filtrando os dias com chuva (precipita√ß√£o &gt; 0)\ndados_com_chuva &lt;- dados[dados$precipitacao &gt; 0, ]\n\n\n\n\n\n\n\nAgora fa√ßa voc√™ mesmo!\n\n\n\nCrie um data.frame chamado observacoes com 7 dias de dados contendo:\n\nData\nUmidade relativa (%)\nVelocidade do vento (km/h)\n\nDepois:\n\nCalcule a m√©dia da umidade\nFiltre os dias com vento acima de 15 km/h\n\n\n\n\n\n\n\n\n\nExplore\n\n\n\n\nUsar head(dados) para ver as primeiras linhas\nUsar str(dados) para ver o tipo de cada coluna\nUsar summary(dados) para obter estat√≠sticas b√°sicas",
    "crumbs": [
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Cap√≠tulo 3 ‚Äì Estruturas de Dados</span>"
    ]
  },
  {
    "objectID": "capitulos/03-estruturas-dados.html#listas",
    "href": "capitulos/03-estruturas-dados.html#listas",
    "title": "\n5¬† Cap√≠tulo 3 ‚Äì Estruturas de Dados\n",
    "section": "\n5.5 Listas",
    "text": "5.5 Listas\nLista: tipo de objeto que pode conter elementos de diferentes tipos: vetor de caracteres, n√∫meros, matrizes\n\n# Criando uma lista com informa√ß√µes da esta√ß√£o meteorol√≥gica\nestacao &lt;- list(\n  nome = \"Esta√ß√£o Chapada das Mesas\",\n  codigo = \"MA123\",\n  localizacao = c(latitude = -7.3, longitude = -46.0),\n  temperaturas = c(28.5, 29.1, 27.8, 30.2),  # em ¬∞C\n  precipitacoes = c(2.4, 0.0, 1.1, 5.6),     # em mm\n  status = TRUE\n)\n\n# Acessando elementos da lista\nestacao$nome\n\n[1] \"Esta√ß√£o Chapada das Mesas\"\n\nestacao$localizacao[\"latitude\"]\n\nlatitude \n    -7.3 \n\nmean(estacao$temperaturas)\n\n[1] 28.9\n\n# Atualizando o status\nestacao$status &lt;- FALSE\n\n\n\n\n\n\n\nAgora fa√ßa voc√™ mesmo!\n\n\n\nCrie uma lista chamada cidade com os seguintes elementos: - Nome da cidade - Popula√ß√£o estimada - Vetor com as temperaturas m√©dias dos √∫ltimos 7 dias - Valor l√≥gico indicando se h√° esta√ß√£o meteorol√≥gica local\nDepois, calcule a m√©dia das temperaturas dessa cidade!",
    "crumbs": [
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Cap√≠tulo 3 ‚Äì Estruturas de Dados</span>"
    ]
  },
  {
    "objectID": "capitulos/03-estruturas-dados.html#estruturas-de-controle",
    "href": "capitulos/03-estruturas-dados.html#estruturas-de-controle",
    "title": "\n5¬† Cap√≠tulo 3 ‚Äì Estruturas de Dados\n",
    "section": "\n5.6 Estruturas de controle",
    "text": "5.6 Estruturas de controle\nEstruturas de controle s√£o blocos de c√≥digo que controlam o fluxo de execu√ß√£o de um programa. Ou seja, elas determinam quais comandos ser√£o executados, em que ordem e quantas vezes.\nElas s√£o fundamentais porque permitem que o c√≥digo:\n\nTome decis√µes (por exemplo: ‚ÄúSe estiver quente, mostre um aviso de calor‚Äù);\nRepita a√ß√µes (por exemplo: ‚ÄúPara cada dia da semana, calcule a m√©dia de temperatura‚Äù);\nReaja a diferentes situa√ß√µes\n\n\n\nTipo\nUsado para‚Ä¶\n\n\n\nif, else\ntomar decis√µes\n\n\nfor\nrepetir uma a√ß√£o para v√°rios valores\n\n\nwhile\nrepetir enquanto uma condi√ß√£o for v√°lida\n\n\n\n\n#Exemplo com if\n\nx &lt;- 25\nif (x &gt; 20) {\n  print(\"Est√° quente\")\n}\n\n[1] \"Est√° quente\"\n\n\n\n#Exemplo com if e else\n\ntemperatura &lt;- 30\nif (temperatura &gt; 28) {\n  print(\"Est√° quente!\")\n} else {\n  print(\"Temperatura agrad√°vel.\")\n}\n\n[1] \"Est√° quente!\"\n\n\n\n#Exemplo com for\n\ndias &lt;- c(\"Seg\", \"Ter\", \"Qua\")\nfor (dia in dias) {\n  print(paste(\"Processando:\", dia))\n}\n\n[1] \"Processando: Seg\"\n[1] \"Processando: Ter\"\n[1] \"Processando: Qua\"\n\n\n\n#Exemplo com while\n\nx &lt;- 1\nwhile (x &lt;= 3) {\n  print(x)\n  x &lt;- x + 1\n}\n\n[1] 1\n[1] 2\n[1] 3",
    "crumbs": [
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Cap√≠tulo 3 ‚Äì Estruturas de Dados</span>"
    ]
  },
  {
    "objectID": "capitulos/03-estruturas-dados.html#fun√ß√µes-criadas",
    "href": "capitulos/03-estruturas-dados.html#fun√ß√µes-criadas",
    "title": "\n5¬† Cap√≠tulo 3 ‚Äì Estruturas de Dados\n",
    "section": "\n5.7 Fun√ß√µes (criadas)",
    "text": "5.7 Fun√ß√µes (criadas)\n\nAl√©m das Fun√ß√µes base j√° existem dentro do programa RCRAN, n√≥s podemos criar nossas pr√≥prias fun√ß√µes para organizar e automatizar processos de an√°lise de dados.\nAs fun√ß√µes s√£o criadas com function().\nPodemos passar quantos argumentos quiser.\nPode usar return() ou deixar o √∫ltimo valor ser retornado automaticamente.\nsapply() √© √∫til para aplicar uma fun√ß√£o a vetores/listas.\n\n\n# Fun√ß√£o para calcular a amplitude t√©rmica do dia\namplitude_termica &lt;- function(temp_max, temp_min) {\n  return(temp_max - temp_min)\n}\n\n# Usando a fun√ß√£o\namplitude_termica(32.5, 21.8)  # resultado: 10.7\n\n[1] 10.7\n\n\n\n# Fun√ß√£o que classifica temperaturas como \"Frio\", \"Agrad√°vel\" ou \"Quente\"\n\nclassificar_temp &lt;- function(temp) { \n  if (temp &lt; 20) {\n    return(\"Frio\")\n  } else if (temp &lt;= 27) {\n    return(\"Agrad√°vel\") \n  } else { \n    return(\"Quente\") \n  }\n}\n\n# Aplicando a fun√ß√£o a um vetor\n\nsapply(temperaturas, classificar_temp)\n\n[1] \"Quente\"    \"Quente\"    \"Quente\"    \"Agrad√°vel\" \"Quente\"   \n\n\n\n\n\n\n\n\nAgora fa√ßa voc√™ mesmo!\n\n\n\nCrie uma fun√ß√£o chamada avaliar_precipitacao() que receba um valor de chuva (em mm) e retorne:\n\n‚ÄúSem chuva‚Äù se for 0\n‚ÄúChuva leve‚Äù se for entre 0 e 5 mm\n‚ÄúChuva forte‚Äù se for acima de 5 mm\n\nDepois, aplique essa fun√ß√£o a um vetor de precipita√ß√£o com 7 dias.",
    "crumbs": [
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Cap√≠tulo 3 ‚Äì Estruturas de Dados</span>"
    ]
  }
]