[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Introdução à Computação Aplicada às Ciências Atmosféricas",
    "section": "",
    "text": "1 Apresentação\nEste é um material didático aberto desenvolvido para apoiar o ensino da disciplina Introdução à Computação Aplicada às Ciências Atmosféricas, do curso de graduação em Meteorologia da UEMA - São Luís-MA, Brasil.\nO objetivo é fornecer uma base sólida em programação com R, aplicada à análise e visualização de dados ambientais e climáticos.\nColaboradores no desenvolvimento deste projeto:\nEste produto está sendo desenvolvido utilizando Quarto books.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Apresentação</span>"
    ]
  },
  {
    "objectID": "capitulos/cap1-introducao.html",
    "href": "capitulos/cap1-introducao.html",
    "title": "2  Capítulo - Introdução à computação para meteorologia",
    "section": "",
    "text": "2.1\nNão precisamos nos tornar programadores profissionais ao final da disciplina. Porém, precisamos ao menos olhar para um código e conserguir compreender e interpretar (mas ir além disso não é proíbido, inclusive recomendamos).",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Capítulo - Introdução à computação para meteorologia</span>"
    ]
  },
  {
    "objectID": "capitulos/cap1-introducao.html#o-que-é-um-algoritmo",
    "href": "capitulos/cap1-introducao.html#o-que-é-um-algoritmo",
    "title": "2  Capítulo - Introdução à computação para meteorologia",
    "section": "2.2 O que é um algoritmo?",
    "text": "2.2 O que é um algoritmo?\nUm algoritmo é uma sequência finita de passos lógicos bem definidos para resolver um problema ou realizar uma tarefa.\nNo contexto da Meteorologia, por exemplo, podemos ter algoritmos para:\n\nCalcular a média de temperatura de uma semana\nVerificar se um valor de precipitação indica “chuva forte”\nClassificar dias como quentes, amenos ou frios",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Capítulo - Introdução à computação para meteorologia</span>"
    ]
  },
  {
    "objectID": "capitulos/cap1-introducao.html#formas-de-representar-algoritmos",
    "href": "capitulos/cap1-introducao.html#formas-de-representar-algoritmos",
    "title": "2  Capítulo - Introdução à computação para meteorologia",
    "section": "2.3 Formas de representar algoritmos",
    "text": "2.3 Formas de representar algoritmos\nExistem diversas formas de representar algoritmos antes de escrevê-los em uma linguagem de programação. As principais são:\n\n2.3.1 1. Descrição narrativa (português estruturado)\n\nExemplo: Calcular a média de três temperaturas:\n\nLeia três temperaturas\nCalcule a média\nMostre o resultado\n\n\n\n\n2.3.2 Fluxograma\n\nUm fluxograma representa graficamente o algoritmo usando formas geométricas (retângulos, losangos, setas).\n\n(Sugestão: você pode usar ferramentas como draw.io para desenhar fluxogramas.)\n\n\n2.3.3 Pseudocódigo (Portugol)\n\nLinguagem intermediária entre a linguagem natural e linguagem de programação.\nUtilizaremos o Visualg para executar pseudocódigos.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Capítulo - Introdução à computação para meteorologia</span>"
    ]
  },
  {
    "objectID": "capitulos/cap1-introducao.html#praticando-a-construção-de-algoritmos-visualg",
    "href": "capitulos/cap1-introducao.html#praticando-a-construção-de-algoritmos-visualg",
    "title": "2  Capítulo - Introdução à computação para meteorologia",
    "section": "2.4 Praticando a construção de algoritmos (Visualg)",
    "text": "2.4 Praticando a construção de algoritmos (Visualg)\n\n2.4.1 Exemplo 1 – Exibir uma mensagem\nalgoritmo \"exibir_mensagem\"\ninicio\n   escreval(\"Bem-vindo à Meteorologia!\")\nfimalgoritmo\n\n\n2.4.2 Exemplo 2 – Somar dois números\nalgoritmo \"soma_simples\"\nvar\n   n1, n2, soma: inteiro\ninicio\n   escreva(\"Digite o primeiro número: \")\n   leia(n1)\n\n   escreva(\"Digite o segundo número: \")\n   leia(n2)\n\n   soma &lt;- n1 + n2\n\n   escreval(\"A soma é: \", soma)\nfimalgoritmo",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Capítulo - Introdução à computação para meteorologia</span>"
    ]
  },
  {
    "objectID": "capitulos/cap1-introducao.html#outros-exemplos",
    "href": "capitulos/cap1-introducao.html#outros-exemplos",
    "title": "2  Capítulo - Introdução à computação para meteorologia",
    "section": "2.5 Outros exemplos",
    "text": "2.5 Outros exemplos\n\n2.5.1 Objetivo: Calcular a média de temperatura de 3 dias\n\n\n2.5.2 Descrição narrativa:\n\nLeia três valores de temperatura\nSome os valores\nDivida a soma por 3\nMostre o resultado\n\n\n\n2.5.3 Pseudocódigo em Portugol (Visualg):\nalgoritmo \"media_temperatura\"\nvar\n   t1, t2, t3, media: real\ninicio\n   escreva(\"Digite a primeira temperatura: \")\n   leia(t1)\n   escreva(\"Digite a segunda temperatura: \")\n   leia(t2)\n   escreva(\"Digite a terceira temperatura: \")\n   leia(t3)\n\n   media &lt;- (t1 + t2 + t3) / 3\n\n   escreval(\"A média das temperaturas é: \", media)\nfimalgoritmo",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Capítulo - Introdução à computação para meteorologia</span>"
    ]
  },
  {
    "objectID": "capitulos/cap1-introducao.html#prática",
    "href": "capitulos/cap1-introducao.html#prática",
    "title": "2  Capítulo - Introdução à computação para meteorologia",
    "section": "2.6 ✍️ Prática",
    "text": "2.6 ✍️ Prática\n\n\n\n\n\n\nAgora faça você mesmo!\n\n\n\nCrie um algoritmo em pseudocódigo que leia a temperatura mínima e máxima do dia,\ncalcule a amplitude térmica e exiba o resultado.\nDepois, implemente esse algoritmo no Visualg!",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Capítulo - Introdução à computação para meteorologia</span>"
    ]
  },
  {
    "objectID": "capitulos/cap2-fundamentos-programacao.html",
    "href": "capitulos/cap2-fundamentos-programacao.html",
    "title": "\n3  Capítulo – Fundamentos de Programação\n",
    "section": "",
    "text": "3.1 Introdução",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Capítulo – Fundamentos de Programação</span>"
    ]
  },
  {
    "objectID": "capitulos/cap2-fundamentos-programacao.html#introdução",
    "href": "capitulos/cap2-fundamentos-programacao.html#introdução",
    "title": "\n3  Capítulo – Fundamentos de Programação\n",
    "section": "",
    "text": "Ao longo da disciplina vamos trabalhar com duas linguagens de programação: R e Python. Porém , vamos abordar nesta primeira versão do ebook somente a linguagem R\nR é uma linguagem de programação e ambiente de software gratuito, livre e de código aberto (open source).\nPara baixar o R CRAN acesse o Link\nPara baixar o RStudio acesse o Link\nPara baixar o RTools acesse o Link",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Capítulo – Fundamentos de Programação</span>"
    ]
  },
  {
    "objectID": "capitulos/cap2-fundamentos-programacao.html#ambientes-de-programação",
    "href": "capitulos/cap2-fundamentos-programacao.html#ambientes-de-programação",
    "title": "\n3  Capítulo – Fundamentos de Programação\n",
    "section": "\n3.2 Ambientes de programação",
    "text": "3.2 Ambientes de programação\n\nSão plataformas para desenvolver os trabalhos/projetos utilizando linguagem de programação (algumas de acesso pela internet outras instaladas diretamente na máquina (computador).\nNeste material vamos utilizar o RStudio, contudo, você pode explorar e utilizar outros ambientes (VSCode, Positron, Posit Cloud, etc.)",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Capítulo – Fundamentos de Programação</span>"
    ]
  },
  {
    "objectID": "capitulos/cap2-fundamentos-programacao.html#ambiente-rstudio",
    "href": "capitulos/cap2-fundamentos-programacao.html#ambiente-rstudio",
    "title": "\n3  Capítulo – Fundamentos de Programação\n",
    "section": "\n3.3 Ambiente RStudio",
    "text": "3.3 Ambiente RStudio\n\n\nFigura 2. Ambiente do RStudio",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Capítulo – Fundamentos de Programação</span>"
    ]
  },
  {
    "objectID": "capitulos/cap2-fundamentos-programacao.html#começando",
    "href": "capitulos/cap2-fundamentos-programacao.html#começando",
    "title": "\n3  Capítulo – Fundamentos de Programação\n",
    "section": "\n3.4 Começando",
    "text": "3.4 Começando\n\nConfigurando ambiente de trabalho: Tools -&gt; Global Options.\nBuscar ajuda: help(), ??sum, help.search(\"nome-do-pacote\"), etc.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Capítulo – Fundamentos de Programação</span>"
    ]
  },
  {
    "objectID": "capitulos/cap2-fundamentos-programacao.html#alguns-símbolos-e-comandos",
    "href": "capitulos/cap2-fundamentos-programacao.html#alguns-símbolos-e-comandos",
    "title": "\n3  Capítulo – Fundamentos de Programação\n",
    "section": "\n3.5 Alguns símbolos e comandos",
    "text": "3.5 Alguns símbolos e comandos\n| Ação                                                      | Comando  |\n|-----------------------------------------------------------|----------|\n| Faz com que o R ignore o que será digitado após o comando | \\#       |\n| Separa dois comandos numa mesma linha                     | ;        |\n| Dado ausente                                              | NA       |\n| Sai do programa                                           | q()      |\n| Lista todos os objetos na sessão atual do R               | ls()     |\n| Remove um objeto. Ex.: x                                  | rm(x)    |\n| Remove dois objetos. Ex.: x e y                           | rm(x, y) |\n| Concatenar valores (criar vetores)                        | c()      |\n| Atribuição de um objeto                                   | -\\&gt;      |",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Capítulo – Fundamentos de Programação</span>"
    ]
  },
  {
    "objectID": "capitulos/cap2-fundamentos-programacao.html#criando-projeto-no-rstudio-.rproj",
    "href": "capitulos/cap2-fundamentos-programacao.html#criando-projeto-no-rstudio-.rproj",
    "title": "\n3  Capítulo – Fundamentos de Programação\n",
    "section": "\n3.6 Criando Projeto No RSTUDIO (.RPROJ)",
    "text": "3.6 Criando Projeto No RSTUDIO (.RPROJ)\n\nTrabalhar com programação exige um nível de organização, que é importante para manter a eficiência e reprodutibilidade. No R, existem algumas maneiras de aumentar esse nível de organização, como Rprojects e controle do diretório de trabalho.\nO diretório de trabalho é, em suma, a pasta onde o R vai procurar os arquivos na hora de ler informações e vai gravar os arquivos na hora de salvar informações.\nA definição do diretório de trabalho é uma etapa opcional, mas que pode economizar muito tempo no processo de análise de dados.\n\n\n# A função getwd() pode ser utilizada para verificar o diretório de trabalho atual.\n#getwd() \n\n# A função setwd()  pode ser utilizada para mudar o diretório de trabalho. \n#setwd() \n## Ex.: setwd('C:/Users/Documentos/R')\n\n## Nota: Na função `setwd()`, devemos usar a barra oblíqua (`/`) para definir o caminho.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Capítulo – Fundamentos de Programação</span>"
    ]
  },
  {
    "objectID": "capitulos/cap2-fundamentos-programacao.html#variáveis-tipos-de-dados-e-operadores",
    "href": "capitulos/cap2-fundamentos-programacao.html#variáveis-tipos-de-dados-e-operadores",
    "title": "\n3  Capítulo – Fundamentos de Programação\n",
    "section": "\n3.7 Variáveis, Tipos de Dados e Operadores",
    "text": "3.7 Variáveis, Tipos de Dados e Operadores\n\n3.7.1 Variáveis\n\nVariável: é o elemento que possuí nome e tipo, e guarda dentro de si dados ou informações.\nOs dados são armazenados temporariamente em variáveis para que sejam processados de acordo com as especificações do algoritmo.\n\n\n\nFigura 3. Variáveis\n\n\n3.7.2 Tipos de dados\n\nOs dados (e seus diversos tipos) são os blocos básicos da programação. Eles representam uma unidade ou um elemento de informação que pode ser acessado através de um identificador - por exemplo, uma variável.\n\nTipos de dados (primitivos):\n-   INT ou número inteiro: valores numéricos inteiros (positivos ou negativos);\n\n-   FLOAT ou o chamado “ponto flutuante”: valores numéricos com casas após a vírgula (obs: em linguagem de programação -\\&gt; ponto) (positivos ou negativos);\n\n-   BOOLEAN ou booleanos: representado apenas por dois valores, “verdadeiro” e “falso” (obs: em linguagem de programação -\\&gt; TRUE e FALSE. Também chamados de operadores lógicos;\n\n-   TEXT: sequências ou cadeias de caracteres, utilizados para manipular textos e/ou outros tipos de dados não numéricos ou booleanos, como hashes de criptografia.\n\n\nFigura 4. Tipo de Dados\n\n\n3.7.3 Objetos\nTrabalhamos, em linguagem R, com objetos que podem ser gerados ou manipulados.\n\nUm objeto é qualquer coisa que pode ser atribuída a uma variável.\n\n*Tipos de objetos no R:*\n\n| Tipo      | Descrição                                 |\n|-----------|-------------------------------------------|\n| character | Textos ou caracteres                      |\n| numeric   | Números inteiros ou reais                 |\n| logical   | Verdadeiro ou falso (TRUE/FALSE)          |\n| complex   | Números complexos                         |\n| list      | Combina diferentes tipos num mesmo objeto |\n| function  | Comandos                                  |\n\n3.7.4 Operadores\n\nChamamos de operadores aritméticos o conjuntos de símbolos que representam as operações básicas da matemática.\nDenominados expressão lógica aquela cujo operadores são lógicos ou relacionais e cujos operandos são realações ou variávies ou constantes do tipo lógico.\n\n\n\nFigura 5. Operadores no R (Paradis, 2005, p.25)",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Capítulo – Fundamentos de Programação</span>"
    ]
  },
  {
    "objectID": "capitulos/cap2-fundamentos-programacao.html#atalhos",
    "href": "capitulos/cap2-fundamentos-programacao.html#atalhos",
    "title": "\n3  Capítulo – Fundamentos de Programação\n",
    "section": "\n3.8 Atalhos",
    "text": "3.8 Atalhos\n\n\nTeclas\nDescrição\n\n\n\n\nCrtl + +\n\nAumenta a letra da interface do RStudio\n\n\n\nCrtl + -\nDiminui a letra da interface do RStudio\n\n\n\nCrtl + ENTER\n\nExecuta uma linha de código\n\n\n\nCrtl + C\n\nComenta um ou mais linhas do Script\n\n\n\nCrtl + Shift + R\n\nCria uma seção no Script\n\n\n\nAlt + -\nAdiciona o símbolo de atribuição -&gt;\n\n\n\n\nCrtl + Shift + N\n\nCriar um novo arquivo Script\n\n\n\n\n3.8.1 Exemplos:\n\nnome &lt;- \"Maria\"\nidade &lt;- 21\ntemperatura &lt;- 27.5\nchuva &lt;- TRUE\n\n#Conferindo o tipo de cada objeto:\nclass(nome)\n\n[1] \"character\"\n\n\n\n\n\n\n\n\nAgora faça você mesmo!\n\n\n\nTente criar objetos com valores diferentes.\nDepois, use o print() para imprimir os objetos no console.\nVocê pode se basear no exemplo acima.\n\n\n\n3.8.2 Outros comandos importantes:\n\n##ATENÇÃO: remova '#' para tornar a linha executável\n\n##Remover objetos\n#remove(nome_do_objeto)\n#rm(nome_do_objeto)\n\n##Verificar objetos criado\n#ls()\n\n##Verificando diretório (pasta do computador) do seu projeto\n#getwd()",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Capítulo – Fundamentos de Programação</span>"
    ]
  },
  {
    "objectID": "capitulos/cap2-fundamentos-programacao.html#pacotes",
    "href": "capitulos/cap2-fundamentos-programacao.html#pacotes",
    "title": "\n3  Capítulo – Fundamentos de Programação\n",
    "section": "\n3.9 Pacotes",
    "text": "3.9 Pacotes\n\n3.9.1 Pacotes\n\nA linguagem R é composta por um conjunto de pacotes que oferecem as funcionalidades básicas da linguagem. Alguns desses pacotes são base (funções de uso geral) e stats (funções para análises e operações estatísticas).\nEsses pacotes fazem parte da instalação básica do R e estão disponíveis através do Comprehensive R Archive Network (CRAN R).\nAlém dos pacotes da base do R, podemos instalar pacotes (packages) com funcionalidades específicas criadas por colaboradores. A grande maioria desses pacotes também estão disponíveis através do CRAN R, mas alguns estão disponíveis em outras plataformas, como o GitHub.\nPara instalar um pacote do R, podemos usar a função install.packages(\"nome_do_pacote\").\n\n\n##ATENÇÃO: remova '#' para tornar a linha executável\n\n#install.packages(\"tidyverse\")  #linha executável\n#install.packages(\"readxl\")   #linha executável\n#install.packages(\"writexl\")   #linha executável\n\n#install.packages(\"dados\")   #linha executável\n#install.packages(\"openair\")   #linha executável\n\n##Para instalar mais de um pacote com um comando:\n\n#install.packages(c(\"ggplot2\", \"dplyr\", \"tidyr\"))   #linha executável\n\n\nApós a instalação, o pacote deve ser carregado. Podemos usar a função library(nome_do_pacote) ou require(nome_do_pacote).\n\n\n#library(tidyverse)   #linha executável\n#library(readxl)   #linha executável\n#library(writexl)   #linha executável\n\n#require(dados)   #outra função para carregar\n\n#search()   # Retorna todos os pacotes carregados.\n\n#ls(\"package:readxl\")   # Lista os comandos do pacote.\n\n#tidyverse_packages()   # Lista os pacotes pertencentes ao projeto.\n\n##Para carregar mais de um pacote com um comando:\n#library(c(\"ggplot2\", \"dplyr\", \"tidyr\"))",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Capítulo – Fundamentos de Programação</span>"
    ]
  },
  {
    "objectID": "capitulos/cap3-estruturas-dados.html",
    "href": "capitulos/cap3-estruturas-dados.html",
    "title": "\n4  Capítulo – Estruturas de Dados\n",
    "section": "",
    "text": "4.1 Tipos de objetos no R",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Capítulo – Estruturas de Dados</span>"
    ]
  },
  {
    "objectID": "capitulos/cap3-estruturas-dados.html#tipos-de-objetos-no-r",
    "href": "capitulos/cap3-estruturas-dados.html#tipos-de-objetos-no-r",
    "title": "\n4  Capítulo – Estruturas de Dados\n",
    "section": "",
    "text": "Os tipos mais comuns de tipos de objeto são: vetores (vector), data frames (tabelas), listas (list), matrizes (matrix), e array (conjunto de matrizes).\n\n\n\nFigura 6. Tipo de Estrutura de Dados (Objetos)",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Capítulo – Estruturas de Dados</span>"
    ]
  },
  {
    "objectID": "capitulos/cap3-estruturas-dados.html#vetores",
    "href": "capitulos/cap3-estruturas-dados.html#vetores",
    "title": "\n4  Capítulo – Estruturas de Dados\n",
    "section": "\n4.2 Vetores",
    "text": "4.2 Vetores\nVertor: é um arranjo linear de dados\n\n#Criando o vetor\ntemperaturas &lt;- c(25.2, 26.1, 27.0, 26.8)\n#Visualizando\ntemperaturas\n\n[1] 25.2 26.1 27.0 26.8\n\n# Verificando a classe do objeto criado\nclass(temperaturas)\n\n[1] \"numeric\"\n\n# Acessando elementos específicos\ntemperaturas[2]\n\n[1] 26.1\n\n\n\n#Criando o vetor\nsensacoes &lt;- c(\"Frio\", \"Agradável\", \"Quente\", \"Muito Quente\", \"Extremo\")\n#Visualizando\nsensacoes\n\n[1] \"Frio\"         \"Agradável\"    \"Quente\"       \"Muito Quente\" \"Extremo\"     \n\n# Verificando a classe do objeto criado\nclass(sensacoes)\n\n[1] \"character\"\n\n# Acessando elementos específicos\nsensacoes[1]\n\n[1] \"Frio\"\n\nsensacoes[3]\n\n[1] \"Quente\"\n\n\n\n#Criando o vetor\nv1 &lt;- c(\"Frio\", 23, \"Quente\", 32, \"Muito Quente\", 40)\n#Visualizando\nv1\n\n[1] \"Frio\"         \"23\"           \"Quente\"       \"32\"           \"Muito Quente\"\n[6] \"40\"          \n\n# Verificando a classe do objeto criado\nclass(v1)\n\n[1] \"character\"\n\n# Acessando elementos específicos\nv1[1]\n\n[1] \"Frio\"\n\nv1[3]\n\n[1] \"Quente\"",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Capítulo – Estruturas de Dados</span>"
    ]
  },
  {
    "objectID": "capitulos/cap3-estruturas-dados.html#funções-básicas",
    "href": "capitulos/cap3-estruturas-dados.html#funções-básicas",
    "title": "\n4  Capítulo – Estruturas de Dados\n",
    "section": "\n4.3 Funções (básicas)",
    "text": "4.3 Funções (básicas)\nFunções base que já existem dentro do programa RCRAN.\n\n\nFunção\nO que faz\n\n\n\nsum()\nSoma todos os valores\n\n\nmin()\nRetorna o menor valor\n\n\n\nmax()\nRetorna o maior valor\n\n\n\nmean()\nCalcula a média dos valores\n\n\nround()\nArredonda um número para n casas decimais\n\n\nlength()\nInforma quantos valores há no vetor\n\n\nsd()\nCalcula o desvio padrão de uma amostra\n\n\n\n\n\n\n\n\n\nVocê sabia?\n\n\n\nTodas essas funções fazem parte do que chamamos de “base R”. Não precisam de pacotes extras para funcionar.\n\n\n\nx &lt;- 4\ny &lt;- 6\nsum(x,y)\n\n[1] 10\n\n\n\n# Vetor com temperaturas diárias (em °C)\ntemperaturas &lt;- c(27.2, 28.5, 29.0, 26.8, 30.1)\n\n# Média das temperaturas\nmean(temperaturas)\n\n[1] 28.32\n\n# Temperatura máxima\nmax(temperaturas)\n\n[1] 30.1\n\n# Temperatura mínima\nmin(temperaturas)\n\n[1] 26.8\n\n# Soma total\nsum(temperaturas)\n\n[1] 141.6\n\n# Número de observações\nlength(temperaturas)\n\n[1] 5\n\n# Arredondar a média com 1 casa decimal\nround(mean(temperaturas), 1)\n\n[1] 28.3",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Capítulo – Estruturas de Dados</span>"
    ]
  },
  {
    "objectID": "capitulos/cap3-estruturas-dados.html#prática",
    "href": "capitulos/cap3-estruturas-dados.html#prática",
    "title": "\n4  Capítulo – Estruturas de Dados\n",
    "section": "\n4.4 ✍️ Prática",
    "text": "4.4 ✍️ Prática\n\n\n\n\n\n\nAgora faça você mesmo!\n\n\n\nCrie um vetor chamado chuvas com os valores de precipitação (em mm) de 7 dias consecutivos.\nDepois:\n\nCalcule a soma total de chuvas\nEncontre o maior valor de precipitação\nArredonde a média com 2 casas decimais",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Capítulo – Estruturas de Dados</span>"
    ]
  },
  {
    "objectID": "capitulos/cap3-estruturas-dados.html#data-frames",
    "href": "capitulos/cap3-estruturas-dados.html#data-frames",
    "title": "\n4  Capítulo – Estruturas de Dados\n",
    "section": "\n4.5 Data Frames",
    "text": "4.5 Data Frames\nData frames: é uma das estruturas mais importantes para análise de dados.\n\n## Exemplo 01\ndados &lt;- data.frame(\n  dia = 1:4,\n  temperatura = c(25.2, 26.1, 27.0, 26.8)\n)\n\n\n## Exemplo 02\n\n# Criando um data frame\ndados &lt;- data.frame(\n  data = as.Date('2023-01-01') + 0:6,\n  temperatura = c(27.5, 28.2, 26.9, 29.1, 30.0, 28.4, 27.8)\n)\nprint(dados)\n\n        data temperatura\n1 2023-01-01        27.5\n2 2023-01-02        28.2\n3 2023-01-03        26.9\n4 2023-01-04        29.1\n5 2023-01-05        30.0\n6 2023-01-06        28.4\n7 2023-01-07        27.8\n\nplot(dados$data, dados$temperatura, type = \"o\", col = \"blue\")\n\n\n\n\n\n\n\n\n## Exemplo 03\n\n# Criando um data frame\n\ndados &lt;- data.frame(\n  data = as.Date(\"2025-03-24\") + 0:4,\n  temperatura_min = c(22.1, 21.8, 22.4, 23.0, 21.5),\n  temperatura_max = c(30.2, 29.8, 31.0, 30.5, 29.7),\n  precipitacao = c(0.0, 5.2, 1.0, 0.0, 3.1)\n)\n\n# Visualizando os dados\nprint(dados)\n\n        data temperatura_min temperatura_max precipitacao\n1 2025-03-24            22.1            30.2          0.0\n2 2025-03-25            21.8            29.8          5.2\n3 2025-03-26            22.4            31.0          1.0\n4 2025-03-27            23.0            30.5          0.0\n5 2025-03-28            21.5            29.7          3.1\n\n# Média de temperatura máxima\nmean(dados$temperatura_max)\n\n[1] 30.24\n\n# Filtrando os dias com chuva (precipitação &gt; 0)\ndados_com_chuva &lt;- dados[dados$precipitacao &gt; 0, ]",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Capítulo – Estruturas de Dados</span>"
    ]
  },
  {
    "objectID": "capitulos/cap3-estruturas-dados.html#prática-1",
    "href": "capitulos/cap3-estruturas-dados.html#prática-1",
    "title": "\n4  Capítulo – Estruturas de Dados\n",
    "section": "\n4.6 ✍️ Prática",
    "text": "4.6 ✍️ Prática\n\n\n\n\n\n\nAgora faça você mesmo!\n\n\n\nCrie um data.frame chamado observacoes com 7 dias de dados contendo:\n\nData\nUmidade relativa (%)\nVelocidade do vento (km/h)\n\nDepois:\n\nCalcule a média da umidade\nFiltre os dias com vento acima de 15 km/h\n\n\n\n\n\n\n\n\n\nExplore\n\n\n\n\nUsar head(dados) para ver as primeiras linhas\nUsar str(dados) para ver o tipo de cada coluna\nUsar summary(dados) para obter estatísticas básicas",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Capítulo – Estruturas de Dados</span>"
    ]
  },
  {
    "objectID": "capitulos/cap3-estruturas-dados.html#listas",
    "href": "capitulos/cap3-estruturas-dados.html#listas",
    "title": "\n4  Capítulo – Estruturas de Dados\n",
    "section": "\n4.7 Listas",
    "text": "4.7 Listas\nLista: tipo de objeto que pode conter elementos de diferentes tipos: vetor de caracteres, números, matrizes\n\n# Criando uma lista com informações da estação meteorológica\nestacao &lt;- list(\n  nome = \"Estação Chapada das Mesas\",\n  codigo = \"MA123\",\n  localizacao = c(latitude = -7.3, longitude = -46.0),\n  temperaturas = c(28.5, 29.1, 27.8, 30.2),  # em °C\n  precipitacoes = c(2.4, 0.0, 1.1, 5.6),     # em mm\n  status = TRUE\n)\n\n# Acessando elementos da lista\nestacao$nome\n\n[1] \"Estação Chapada das Mesas\"\n\nestacao$localizacao[\"latitude\"]\n\nlatitude \n    -7.3 \n\nmean(estacao$temperaturas)\n\n[1] 28.9\n\n# Atualizando o status\nestacao$status &lt;- FALSE",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Capítulo – Estruturas de Dados</span>"
    ]
  },
  {
    "objectID": "capitulos/cap3-estruturas-dados.html#prática-2",
    "href": "capitulos/cap3-estruturas-dados.html#prática-2",
    "title": "\n4  Capítulo – Estruturas de Dados\n",
    "section": "\n4.8 ✍️ Prática",
    "text": "4.8 ✍️ Prática\n\n\n\n\n\n\nAgora faça você mesmo!\n\n\n\nCrie uma lista chamada cidade com os seguintes elementos: - Nome da cidade - População estimada - Vetor com as temperaturas médias dos últimos 7 dias - Valor lógico indicando se há estação meteorológica local\nDepois, calcule a média das temperaturas dessa cidade!",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Capítulo – Estruturas de Dados</span>"
    ]
  },
  {
    "objectID": "capitulos/cap3-estruturas-dados.html#matrizes-em-r",
    "href": "capitulos/cap3-estruturas-dados.html#matrizes-em-r",
    "title": "\n4  Capítulo – Estruturas de Dados\n",
    "section": "\n4.9 Matrizes em R",
    "text": "4.9 Matrizes em R\nUma matriz é uma estrutura bidimensional (2D) composta por linhas e colunas, onde todos os elementos devem ser do mesmo tipo de dado (geralmente numérico).\n\n\n4.9.1 Criando uma matriz\n\n# Criando uma matriz com temperaturas (3 dias, 4 horários)\nmt_temperatura &lt;- matrix(\n  c(22.1, 24.3, 25.5, 23.0,   # Dia 1\n    21.8, 23.5, 26.2, 24.1,   # Dia 2\n    20.0, 22.4, 24.0, 23.3),  # Dia 3\n  nrow = 3,\n  ncol = 4,\n  byrow = TRUE\n)\n\nmt_temperatura\n\n     [,1] [,2] [,3] [,4]\n[1,] 22.1 24.3 25.5 23.0\n[2,] 21.8 23.5 26.2 24.1\n[3,] 20.0 22.4 24.0 23.3\n\nlength(mt_temperatura)\n\n[1] 12\n\ndim(mt_temperatura)\n\n[1] 3 4\n\n# Nomeando linhas e colunas\nrownames(mt_temperatura) &lt;- c(\"Dia 1\", \"Dia 2\", \"Dia 3\")\ncolnames(mt_temperatura) &lt;- c(\"06h\", \"12h\", \"15h\", \"18h\")\n\n# Visualizar a matriz\nmt_temperatura\n\n       06h  12h  15h  18h\nDia 1 22.1 24.3 25.5 23.0\nDia 2 21.8 23.5 26.2 24.1\nDia 3 20.0 22.4 24.0 23.3\n\n#Acessando elementos da \n# Temperatura do Dia 2 às 15h\nmt_temperatura[\"Dia 2\", \"15h\"]\n\n[1] 26.2\n\n# Todas as temperaturas do Dia 3\nmt_temperatura[\"Dia 3\", ]\n\n 06h  12h  15h  18h \n20.0 22.4 24.0 23.3 \n\n# Todas as temperaturas às 12h\nmt_temperatura[, \"12h\"]\n\nDia 1 Dia 2 Dia 3 \n 24.3  23.5  22.4 \n\n\n\n4.9.2 Aplicando funções\n\n## Realizando operações com matriz\n\n# Média por horário\ncolMeans(mt_temperatura)\n\n     06h      12h      15h      18h \n21.30000 23.40000 25.23333 23.46667 \n\n# Média por dia\nrowMeans(mt_temperatura)\n\n Dia 1  Dia 2  Dia 3 \n23.725 23.900 22.425 \n\n# Temperatura máxima por dia\napply(mt_temperatura, 1, max)\n\nDia 1 Dia 2 Dia 3 \n 25.5  26.2  24.0 \n\n\n\n4.9.3 ✍️ Prática\n\n\n\n\n\n\nAgora faça você mesmo!\n\n\n\nCrie uma matriz com valores de umidade relativa para 5 dias e 3 horários (manhã, tarde e noite).\nEm seguida, calcule:\n\nA umidade média por horário\nO valor máximo por dia\nQual o menor valor registrado na semana",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Capítulo – Estruturas de Dados</span>"
    ]
  },
  {
    "objectID": "capitulos/cap3-estruturas-dados.html#estruturas-de-controle",
    "href": "capitulos/cap3-estruturas-dados.html#estruturas-de-controle",
    "title": "\n4  Capítulo – Estruturas de Dados\n",
    "section": "\n4.10 Estruturas de controle",
    "text": "4.10 Estruturas de controle\nEstruturas de controle são blocos de código que controlam o fluxo de execução de um programa. Ou seja, elas determinam quais comandos serão executados, em que ordem e quantas vezes.\nElas são fundamentais porque permitem que o código:\n\nTome decisões (por exemplo: “Se estiver quente, mostre um aviso de calor”);\nRepita ações (por exemplo: “Para cada dia da semana, calcule a média de temperatura”);\nReaja a diferentes situações\n\n\n\nTipo\nUsado para…\n\n\n\nif, else\ntomar decisões\n\n\nfor\nrepetir uma ação para vários valores\n\n\nwhile\nrepetir enquanto uma condição for válida\n\n\n\n\n#Exemplo com if\n\nx &lt;- 25\nif (x &gt; 20) {\n  print(\"Está quente\")\n}\n\n[1] \"Está quente\"\n\n\n\n#Exemplo com if e else\n\ntemperatura &lt;- 30\nif (temperatura &gt; 28) {\n  print(\"Está quente!\")\n} else {\n  print(\"Temperatura agradável.\")\n}\n\n[1] \"Está quente!\"\n\n\n\n#Exemplo com for\n\ndias &lt;- c(\"Seg\", \"Ter\", \"Qua\")\nfor (dia in dias) {\n  print(paste(\"Processando:\", dia))\n}\n\n[1] \"Processando: Seg\"\n[1] \"Processando: Ter\"\n[1] \"Processando: Qua\"\n\n\n\n#Exemplo com while\n\nx &lt;- 1\nwhile (x &lt;= 3) {\n  print(x)\n  x &lt;- x + 1\n}\n\n[1] 1\n[1] 2\n[1] 3",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Capítulo – Estruturas de Dados</span>"
    ]
  },
  {
    "objectID": "capitulos/cap3-estruturas-dados.html#funções-criadas",
    "href": "capitulos/cap3-estruturas-dados.html#funções-criadas",
    "title": "\n4  Capítulo – Estruturas de Dados\n",
    "section": "\n4.11 Funções (criadas)",
    "text": "4.11 Funções (criadas)\n\nAlém das Funções base já existem dentro do programa RCRAN, nós podemos criar nossas próprias funções para organizar e automatizar processos de análise de dados.\nAs funções são criadas com function().\nPodemos passar quantos argumentos quiser.\nPode usar return() ou deixar o último valor ser retornado automaticamente.\nsapply() é útil para aplicar uma função a vetores/listas.\n\n\n# Função para calcular a amplitude térmica do dia\namplitude_termica &lt;- function(temp_max, temp_min) {\n  return(temp_max - temp_min)\n}\n\n# Usando a função\namplitude_termica(32.5, 21.8)  # resultado: 10.7\n\n[1] 10.7\n\n\n\n# Função que classifica temperaturas como \"Frio\", \"Agradável\" ou \"Quente\"\n\nclassificar_temp &lt;- function(temp) { \n  if (temp &lt; 20) {\n    return(\"Frio\")\n  } else if (temp &lt;= 27) {\n    return(\"Agradável\") \n  } else { \n    return(\"Quente\") \n  }\n}\n\n# Aplicando a função a um vetor\n\nsapply(temperaturas, classificar_temp)\n\n[1] \"Quente\"    \"Quente\"    \"Quente\"    \"Agradável\" \"Quente\"   \n\n\n\n\n\n\n\n\nAgora faça você mesmo!\n\n\n\nCrie uma função chamada avaliar_precipitacao() que receba um valor de chuva (em mm) e retorne:\n\n“Sem chuva” se for 0\n“Chuva leve” se for entre 0 e 5 mm\n“Chuva forte” se for acima de 5 mm\n\nDepois, aplique essa função a um vetor de precipitação com 7 dias.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Capítulo – Estruturas de Dados</span>"
    ]
  },
  {
    "objectID": "capitulos/cap4-manipulacao-dados.html",
    "href": "capitulos/cap4-manipulacao-dados.html",
    "title": "\n5  Capítulo – Manipulação de Dados com R\n",
    "section": "",
    "text": "5.1 Importando dados\nNeste capítulo, vamos explorar como importar, visualizar, limpar e transformar dados meteorológicos utilizando o R.\nlibrary(readxl)\nlibrary(tidyverse)\n#library(dplyr)\n#library(tidyr)\n\n\n#Normais Climatológicas (1991-2020) de Temperatura Máxima\n#Mensal obtidas do INMET\n\ndados_nc &lt;- read_excel(\"dados/TMAX_INMET.xlsx\")\n#head(dados_nc)\nstr(dados_nc)\n\ntibble [190 × 16] (S3: tbl_df/tbl/data.frame)\n $ Código         : num [1:190] 82989 83249 82353 83007 82970 ...\n $ Nome da Estação: chr [1:190] \"AGUA BRANCA\" \"ALAGOINHAS\" \"ALTAMIRA\" \"ALTO DA BOA VISTA\" ...\n $ UF             : chr [1:190] \"AL\" \"BA\" \"PA\" \"RJ\" ...\n $ Janeiro        : num [1:190] 31.1 33.1 31.6 30.2 32 30.6 33.7 31.9 30.8 28.3 ...\n $ Fevereiro      : num [1:190] NA 33 31.2 30.6 32 30.8 34.7 32.1 31 28.8 ...\n $ Março          : num [1:190] 30.7 33.1 31.3 29.1 32.2 30.9 33.7 32.5 31 28.1 ...\n $ Abril          : num [1:190] 29.5 31.1 31.6 27.5 32.7 30.4 32.6 33 31.5 27.8 ...\n $ Maio           : num [1:190] 27.2 29.2 32.1 25 33.2 29.6 30.9 32.5 32.2 26 ...\n $ Junho          : num [1:190] 25.1 27.7 32.9 24.3 33.3 28.6 29.8 32.5 33 25.3 ...\n $ Julho          : num [1:190] 24.2 27.2 NA 24.1 33.8 27.9 29.6 33.1 33.8 25.5 ...\n $ Agosto         : num [1:190] 25.2 27.4 34.5 24.6 35.3 27.9 31 35.4 35.1 27.6 ...\n $ Setembro       : num [1:190] 27.6 28.8 34.8 25.2 36.7 28.4 32.8 36.5 34.8 29 ...\n $ Outubro        : num [1:190] 30 30.6 34.6 26.3 35.8 29.2 34 35.4 32.9 29.4 ...\n $ Novembro       : num [1:190] 31.1 31.9 34 26.8 33.5 29.8 32.3 33 31.6 27.9 ...\n $ Dezembro       : num [1:190] 31.5 32.9 32.9 29.1 32.4 30.2 32.8 32.2 31.1 28.1 ...\n $ Ano            : num [1:190] NA 30.5 NA 26.9 33.6 29.5 32.3 33.3 32.4 27.7 ...",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Capítulo – Manipulação de Dados com R</span>"
    ]
  },
  {
    "objectID": "capitulos/cap4-manipulacao-dados.html#explorando-os-dados",
    "href": "capitulos/cap4-manipulacao-dados.html#explorando-os-dados",
    "title": "\n5  Capítulo – Manipulação de Dados com R\n",
    "section": "\n5.2 Explorando os dados",
    "text": "5.2 Explorando os dados\n\ndim(dados_nc)\n\n[1] 190  16\n\n#summary(dados_nc)\n# names(dados_nc)\n\nValores Faltante (NA)\n\n#Verificar de tem valores NA\nany(is.na(dados_nc))\n\n[1] TRUE\n\n#Contar quantos valores NA existem no total\n# sum(is.na(dados_nc))\n\n#Verificar o número de NAs por coluna\n# colSums(is.na(dados_nc))\n\n#ver linhas que contêm pelo menos um NA\n# dados_nc  |&gt; \n  # filter(if_any(everything(), is.na))\n\n\n# Remover valores NA\n\n#De linhas\ndados_limpos &lt;- dados_nc  |&gt; \n  drop_na()\n\ndim(dados_limpos)\n\n[1] 142  16\n\n#De colunas específica\n# dados_limpos &lt;- dados_nc  |&gt; \n  # drop_na(Janeiro, Fevereiro)\n\n\n#Substituir (imputar) valores NA\n\n#Substituir NAs por zero\n# dados_preenchidos &lt;- dados_nc  |&gt; \n  # mutate(across(everything(), ~replace_na(.x, 0)))\n\n#Substituir NAs por média da variável\ndados_preenchidos2 &lt;- dados_nc  |&gt; \n  mutate(across(where(is.numeric), ~ifelse(is.na(.), mean(., na.rm = TRUE), .)))\n\nany(is.na(dados_preenchidos2))\n\n[1] FALSE",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Capítulo – Manipulação de Dados com R</span>"
    ]
  },
  {
    "objectID": "capitulos/cap4-manipulacao-dados.html#trabalhando-com-linhas-e-colunas",
    "href": "capitulos/cap4-manipulacao-dados.html#trabalhando-com-linhas-e-colunas",
    "title": "\n5  Capítulo – Manipulação de Dados com R\n",
    "section": "\n5.3 Trabalhando com Linhas e Colunas",
    "text": "5.3 Trabalhando com Linhas e Colunas\n\n# Selecionar coluna pelo nome\n# dados$UF\n\n# Selecionar várias colunas por índice\n# dados[, c(1,3)]\n\n# Selecionar linha específica\n# dados[10, ]\n\n# Célula na linha 5, coluna 3\n#dados[5, 3]",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Capítulo – Manipulação de Dados com R</span>"
    ]
  },
  {
    "objectID": "capitulos/cap4-manipulacao-dados.html#renomeando-criando-deletando-colunas",
    "href": "capitulos/cap4-manipulacao-dados.html#renomeando-criando-deletando-colunas",
    "title": "\n5  Capítulo – Manipulação de Dados com R\n",
    "section": "\n5.4 Renomeando, criando, deletando colunas",
    "text": "5.4 Renomeando, criando, deletando colunas\n\n# Renomeando coluna\nTMAX_INMET &lt;- dados_nc |&gt; \n  rename(\n    Estacao = `Nome da Estação`,\n    Jan = Janeiro,\n    Fev = Fevereiro,\n    Mar = Março,\n    Abr = Abril,\n    Mai = Maio,\n    Jun = Junho,\n    Jul = Julho,\n    Ago = Agosto,\n    Set = Setembro,\n    Out = Outubro,\n    Nov = Novembro,\n    Dez = Dezembro\n  )\n\nhead(TMAX_INMET)\n\n# A tibble: 6 × 16\n  Código Estacao     UF      Jan   Fev   Mar   Abr   Mai   Jun   Jul   Ago   Set\n   &lt;dbl&gt; &lt;chr&gt;       &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1  82989 AGUA BRANCA AL     31.1  NA    30.7  29.5  27.2  25.1  24.2  25.2  27.6\n2  83249 ALAGOINHAS  BA     33.1  33    33.1  31.1  29.2  27.7  27.2  27.4  28.8\n3  82353 ALTAMIRA    PA     31.6  31.2  31.3  31.6  32.1  32.9  NA    34.5  34.8\n4  83007 ALTO DA BO… RJ     30.2  30.6  29.1  27.5  25    24.3  24.1  24.6  25.2\n5  82970 ALTO PARNA… MA     32    32    32.2  32.7  33.2  33.3  33.8  35.3  36.7\n6  83096 ARACAJU     SE     30.6  30.8  30.9  30.4  29.6  28.6  27.9  27.9  28.4\n# ℹ 4 more variables: Out &lt;dbl&gt;, Nov &lt;dbl&gt;, Dez &lt;dbl&gt;, Ano &lt;dbl&gt;\n\n\n\n# Pivotando \n\nTMAX_longer &lt;- \n  TMAX_INMET |&gt; \n  dplyr::mutate(Ano = NULL) |&gt; \n  tidyr::pivot_longer(\n    cols = Jan:Dez,      \n    names_to = 'Meses',  \n    values_to = 'Tmax'\n  )\n\nhead(TMAX_longer)\n\n# A tibble: 6 × 5\n  Código Estacao     UF    Meses  Tmax\n   &lt;dbl&gt; &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt;\n1  82989 AGUA BRANCA AL    Jan    31.1\n2  82989 AGUA BRANCA AL    Fev    NA  \n3  82989 AGUA BRANCA AL    Mar    30.7\n4  82989 AGUA BRANCA AL    Abr    29.5\n5  82989 AGUA BRANCA AL    Mai    27.2\n6  82989 AGUA BRANCA AL    Jun    25.1\n\n\n\n# Filtrando os dados UF == SP \n\nTMAX_SP &lt;- \n  TMAX_longer |&gt; \n  dplyr::filter(UF == 'SP')\n\nTMAX_SP\n\n# A tibble: 72 × 5\n   Código Estacao          UF    Meses  Tmax\n    &lt;dbl&gt; &lt;chr&gt;            &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt;\n 1  83714 CAMPOS DO JORDAO SP    Jan    NA  \n 2  83714 CAMPOS DO JORDAO SP    Fev    23  \n 3  83714 CAMPOS DO JORDAO SP    Mar    22  \n 4  83714 CAMPOS DO JORDAO SP    Abr    20.8\n 5  83714 CAMPOS DO JORDAO SP    Mai    18.1\n 6  83714 CAMPOS DO JORDAO SP    Jun    17.5\n 7  83714 CAMPOS DO JORDAO SP    Jul    17.8\n 8  83714 CAMPOS DO JORDAO SP    Ago    19.6\n 9  83714 CAMPOS DO JORDAO SP    Set    21  \n10  83714 CAMPOS DO JORDAO SP    Out    21.8\n# ℹ 62 more rows",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Capítulo – Manipulação de Dados com R</span>"
    ]
  },
  {
    "objectID": "capitulos/cap4-manipulacao-dados.html#prática",
    "href": "capitulos/cap4-manipulacao-dados.html#prática",
    "title": "\n5  Capítulo – Manipulação de Dados com R\n",
    "section": "\n5.5 ✍️ Prática",
    "text": "5.5 ✍️ Prática\n\n\n\n\n\n\nAgora faça você mesmo!\n\n\n\n\nFiltrar os dados para o MA",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Capítulo – Manipulação de Dados com R</span>"
    ]
  },
  {
    "objectID": "capitulos/cap4-manipulacao-dados.html#gerando-gráfico-de-pontos",
    "href": "capitulos/cap4-manipulacao-dados.html#gerando-gráfico-de-pontos",
    "title": "\n5  Capítulo – Manipulação de Dados com R\n",
    "section": "\n5.6 Gerando gráfico de pontos",
    "text": "5.6 Gerando gráfico de pontos\n\n#Organizando ordem dos meses\n\nTMAX_SP &lt;-\n   TMAX_SP |&gt;\n   mutate(Meses = factor(Meses,\n                         levels = c('Jan', 'Fev', 'Mar', 'Abr', 'Mai',\n                                    'Jun','Jul', 'Ago', 'Set', 'Out',\n                                    'Nov', 'Dez')))\n\n\npaleta_cor &lt;- colorRampPalette(c('red', 'blue', 'goldenrod'))\n\ng1 &lt;- ggplot(data = TMAX_SP) +\n  geom_point(aes(x = Meses, y = Tmax, color = Meses),\n             shape = 18, size = 3)+\n  scale_color_manual(values = paleta_cor(12)) +\n  theme_classic()\n\ng1",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Capítulo – Manipulação de Dados com R</span>"
    ]
  },
  {
    "objectID": "capitulos/cap4-manipulacao-dados.html#prática-1",
    "href": "capitulos/cap4-manipulacao-dados.html#prática-1",
    "title": "\n5  Capítulo – Manipulação de Dados com R\n",
    "section": "\n5.7 ✍️ Prática",
    "text": "5.7 ✍️ Prática\n\n\n\n\n\n\nAgora faça você mesmo!\n\n\n\n\nGerar gráfico para os dados do MA",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Capítulo – Manipulação de Dados com R</span>"
    ]
  },
  {
    "objectID": "capitulos/cap4-manipulacao-dados.html#gerando-gráfico-de-barras",
    "href": "capitulos/cap4-manipulacao-dados.html#gerando-gráfico-de-barras",
    "title": "\n5  Capítulo – Manipulação de Dados com R\n",
    "section": "\n5.8 Gerando gráfico de barras",
    "text": "5.8 Gerando gráfico de barras\n\n#\nTMAX_UF &lt;- \n  TMAX_longer |&gt; \n  group_by(UF) |&gt; \n  summarise(Tmax_anual = mean(Tmax, na.rm = T))\n\n\ntail(TMAX_UF)\n\n# A tibble: 6 × 2\n  UF    Tmax_anual\n  &lt;chr&gt;      &lt;dbl&gt;\n1 RR          33.6\n2 RS          24.0\n3 SC          23.5\n4 SE          30.2\n5 SP          26.8\n6 TO          33.2\n\n\n\nggplot(TMAX_UF, aes(x = reorder(UF, Tmax_anual),\n                    y = Tmax_anual)) +\n  geom_col(fill = \"lightblue\") +\n  scale_y_continuous(expand = c(0,0)) +\n  labs(title = \"Temperatura Média Anual por Estado\",\n       x = \"Estado (UF)\", y = \"Temperatura Média Anual (°C)\") +\n  theme(\n    axis.text.x = element_text(angle = 45)\n  ) +\n  theme_bw()",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Capítulo – Manipulação de Dados com R</span>"
    ]
  },
  {
    "objectID": "capitulos/cap4-manipulacao-dados.html#prática-2",
    "href": "capitulos/cap4-manipulacao-dados.html#prática-2",
    "title": "\n5  Capítulo – Manipulação de Dados com R\n",
    "section": "\n5.9 ✍️ Prática",
    "text": "5.9 ✍️ Prática\nAcessando planilha .csv",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Capítulo – Manipulação de Dados com R</span>"
    ]
  },
  {
    "objectID": "capitulos/cap7-fundamentos-python.html",
    "href": "capitulos/cap7-fundamentos-python.html",
    "title": "6  Capítulo – Fundamentos de Programação com Python",
    "section": "",
    "text": "6.1 Introdução à Linguagem Python\nA linguagem Python foi desenvolvida por Guido van Rossum, e lançanda no início da década de 1990. Python é uma linguagem de alto nível interpretada, de código aberto e próposito geral. Sendo utilizada em vários setores como ciência de dados, matemática, geografia, física, medicina, big data, machine learning, detre outras.\nPython é uma linguagem multiplataforma, funciona em diferentes ambientes e sistemas operacionais, como Android, IOS, Linux, Windows e na nuvem.\nPara executar um programa escrito em Python, é preciso tê-lo instalado em seu computador, assim como também é necessário ter ferramentas para a escrita e execução de códigos. Essas ferramentas são chamadas de ambiente de desenvolvimento integrado (IDE, integrated development environment), com várias opções gratuitas (VSCode, Spyder, Positron).\nA plataforma Google Colab ou Colaboratory (este que você está acessando), permite que você escreva e execute códigos em Python no navegador, sem que seja “necessário” configurar ferramentas, além de possuir acesso gratuito à GPUs e compoartilhamento facilitado.\nCaracterísticas principais: - Simples e legível - Interpretada (sem necessidade de compilação) - Ampla comunidade científica e bibliotecas - Multiplataforma\nA linguagem Python, como a maioria das linguagens de programação, é formada por: - comandos; - tipos de dados; - variáveis; - expressões; - estrutura de dados; - funções; - bibliotecas (pacostes).\nOs arquivos (scripts, códigos) criado para executar no computador, devem ter a extensão .py (scrip_01.py) e necessitam que o interpretador da linguagem Python esteja instalado no computador que será utilizado.\nEm plataformas como o Google Colaboratory estes arquivos terão a extensão .ipynb (scrip_01.ipynb), denominados notebooks.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Capítulo – Fundamentos de Programação com Python</span>"
    ]
  },
  {
    "objectID": "capitulos/cap7-fundamentos-python.html#tipos-de-dados-básicos",
    "href": "capitulos/cap7-fundamentos-python.html#tipos-de-dados-básicos",
    "title": "6  Capítulo – Fundamentos de Programação com Python",
    "section": "6.2 Tipos de Dados Básicos",
    "text": "6.2 Tipos de Dados Básicos\n# Números inteiros e decimais\na = 5           # int\nb = 3.14        # float\n\n# Texto (string)\nnome = \"Meteorologia\"\n\n# Booleanos\nchovendo = False\n\n# Verificando os tipos\nprint(type(a))\nprint(type(nome))",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Capítulo – Fundamentos de Programação com Python</span>"
    ]
  },
  {
    "objectID": "capitulos/cap7-fundamentos-python.html#estruturas-de-dados",
    "href": "capitulos/cap7-fundamentos-python.html#estruturas-de-dados",
    "title": "6  Capítulo – Fundamentos de Programação com Python",
    "section": "6.3 Estruturas de Dados",
    "text": "6.3 Estruturas de Dados\n\n6.3.1 Listas\n\naplicada para dados como coordenadas geográficas. Ex.: (-15,-45).\nquando vamos fazer uma composição colorida de imagens: (3,2,1) #(R,G,B).\n\ntemperaturas = [25.3, 27.8, 30.1]\nprint(temperaturas[0])       # Acessa o primeiro elemento\nprint(temperaturas[-1])      # Último elemento\n\n\n6.3.2 Dicionários\nExemplos: usado em paleta de cores, metadados de imagens\nestacao = {\n    \"nome\": \"Primavera\",\n    \"chuva_mm\": 120,\n    \"dias_quentes\": 20\n}\nprint(estacao[\"chuva_mm\"])\n\n\n6.3.3 Tuplas\n\naplicada para dados como coordenadas geográficas. Ex.: (-15,-45).\nquando vamos fazer uma composição colorida de imagens: (3,2,1) #(R,G,B).\n\ny = (1,2,4,6,8)\nprint(y)\ntype(y)\n\n\n6.3.4 Array\nUsado para representar imagens (bidimensional).\nForma de estrutura mais importante para se trabalhar nos processamentos de imagens de satélite.\nimport numpy as np\n\narr = np.array([1,2,3,4,5,6,7,8])\ntype(arr)\n\narr = np.array([[1,2,3,4,5,6,7,8], [8,7,6,5,4,3,2,1]])\n\nprint(arr)\n\narr = np.array([1,2,3,4,5,6,7,8])\n\narr[-1]\n\n#Calculos\narr.min()\narr.mean()\n\nnp.median(arr)",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Capítulo – Fundamentos de Programação com Python</span>"
    ]
  },
  {
    "objectID": "capitulos/cap7-fundamentos-python.html#estruturas-de-controle",
    "href": "capitulos/cap7-fundamentos-python.html#estruturas-de-controle",
    "title": "6  Capítulo – Fundamentos de Programação com Python",
    "section": "6.4 Estruturas de Controle",
    "text": "6.4 Estruturas de Controle\n\n6.4.1 Condicional (if, elif, else)\ntemp = 29\n\nif temp &lt; 18:\n    print(\"Frio\")\nelif temp &lt;= 28:\n    print(\"Agradável\")\nelse:\n    print(\"Quente\")\n\n\n6.4.2 Repetição (for)\nfor t in temperaturas:\n    print(t)",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Capítulo – Fundamentos de Programação com Python</span>"
    ]
  },
  {
    "objectID": "capitulos/cap7-fundamentos-python.html#criando-funções",
    "href": "capitulos/cap7-fundamentos-python.html#criando-funções",
    "title": "6  Capítulo – Fundamentos de Programação com Python",
    "section": "6.5 Criando Funções",
    "text": "6.5 Criando Funções\ndef amplitude_termica(tmax, tmin):\n    return tmax - tmin\n\nprint(amplitude_termica(31.4, 22.8))",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Capítulo – Fundamentos de Programação com Python</span>"
    ]
  },
  {
    "objectID": "capitulos/cap8-estudo-casos.html",
    "href": "capitulos/cap8-estudo-casos.html",
    "title": "7  Capítulo – Estudos de Caso: Análise de Dados Meteorológicos",
    "section": "",
    "text": "7.1 Introdução\nNeste capítulo, apresentaremos estudos de caso utilizando dados climáticos e meterológico.\nCada estudo de caso abordará uma situação prática comum em análises climáticas.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Capítulo – Estudos de Caso: Análise de Dados Meteorológicos</span>"
    ]
  },
  {
    "objectID": "capitulos/cap8-estudo-casos.html#estudo-de-caso-01-temperatura-média-mensal-a-partir-de-dados-de-uma-estação-meteorológica",
    "href": "capitulos/cap8-estudo-casos.html#estudo-de-caso-01-temperatura-média-mensal-a-partir-de-dados-de-uma-estação-meteorológica",
    "title": "7  Capítulo – Estudos de Caso: Análise de Dados Meteorológicos",
    "section": "7.2 Estudo de caso 01: Temperatura média mensal a partir de dados de uma estação meteorológica",
    "text": "7.2 Estudo de caso 01: Temperatura média mensal a partir de dados de uma estação meteorológica\nAs condições climatológicas influenciam desde a safra de grãos até a decisão de um vendedor ambulante levar seu carrinho para a praia ou não, sendo importante e influente na economia do país. Portanto aprender a coletar e elaborar análises de dados sobre o clima usando o Python (ou outra linguagem de programação) é fundamental para o profissional meteorologista.\nCondições como a temperatura, umidade, radiação e pressão atmosgérica podem influenciar diversos aspectos do nosso cotidiano, portanto, o monitoramento do clima pode ajudar a tomar melhores decisões.\nNo Brasil, uma das principais fontes de dados públicas sobre condições climática é o Instituto Nacional de Meterologia (INMET), que disponibiliza dados históricos com relativa atualização sobre:\n\nPrecipitação\nPressão atmosférica\nRadiação\nTemperatura\nUmidade\nVento\n\nOs dados são disponibilizados para nível de:\n\nRegiões\nEstados\nMunicípios\n\nEm uma granularidade de:\n\nData\nHora\n\nDessa forma, vamos práticar!\nNo primeiro estudo de caso vamos calcular e visualizar a temperatura média mensal para uma estação meteorológica do INMET.\nPara isso você deve baixar dados de uma estação no site do INMET\nEm seguida crie um novo notebook (código/script) no google colab (.ipynb) e comece os trabalhos.\nPara o exemplo do estudo de caso será utilizado dados da estação automática A203 localizada no município de São Luís-MA para o ano de 2024.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Capítulo – Estudos de Caso: Análise de Dados Meteorológicos</span>"
    ]
  },
  {
    "objectID": "capitulos/cap8-estudo-casos.html#criando-notebookscriptcódigo",
    "href": "capitulos/cap8-estudo-casos.html#criando-notebookscriptcódigo",
    "title": "7  Capítulo – Estudos de Caso: Análise de Dados Meteorológicos",
    "section": "7.3 Criando notebook/script/código",
    "text": "7.3 Criando notebook/script/código\n\nAcesse um navegador de internet (microsoft edge, google chrome, Opera, etc.).\nFaça o login na sua conta gmail, então acesse Google Colab.\nEntão crie um novo notebook:\n\n\n\n\n\n\nRenomei o arquivo, conecte o ambiente de trabalho e comece a construir o seu código com células de texto (explicando cada etapa) e célular de código (executando o acesso, manipulação e análise dos dados):",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Capítulo – Estudos de Caso: Análise de Dados Meteorológicos</span>"
    ]
  },
  {
    "objectID": "capitulos/cap8-estudo-casos.html#instalando-bibliotecas",
    "href": "capitulos/cap8-estudo-casos.html#instalando-bibliotecas",
    "title": "7  Capítulo – Estudos de Caso: Análise de Dados Meteorológicos",
    "section": "7.4 Instalando bibliotecas",
    "text": "7.4 Instalando bibliotecas\n#INSTALANDO BIBLIOTECAS\n\n!pip install seaborn -q",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Capítulo – Estudos de Caso: Análise de Dados Meteorológicos</span>"
    ]
  },
  {
    "objectID": "capitulos/cap8-estudo-casos.html#importando-bibliotecas",
    "href": "capitulos/cap8-estudo-casos.html#importando-bibliotecas",
    "title": "7  Capítulo – Estudos de Caso: Análise de Dados Meteorológicos",
    "section": "7.5 Importando bibliotecas",
    "text": "7.5 Importando bibliotecas\nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Capítulo – Estudos de Caso: Análise de Dados Meteorológicos</span>"
    ]
  },
  {
    "objectID": "capitulos/cap8-estudo-casos.html#carregando-dados-da-estação-arquivo-csv",
    "href": "capitulos/cap8-estudo-casos.html#carregando-dados-da-estação-arquivo-csv",
    "title": "7  Capítulo – Estudos de Caso: Análise de Dados Meteorológicos",
    "section": "7.6 Carregando dados da estação (arquivo csv)",
    "text": "7.6 Carregando dados da estação (arquivo csv)\n#CARREGANDO E VISUALIZANDO TABELA DE DADOS\n\n# dados = pd.read_csv('/content/INMET_NE_MA_A203_SAO_LUIS_2024.csv', sep=';', skiprows= 8, decimal=',', encoding='latin1')\n\ndados = \"https://raw.githubusercontent.com/IzadoraSC/Disc_Computacao_II/main/Dados/INMET_NE_MA_A203_SAO%20LUIS_01-01-2024_A_31-12-2024.CSV\"\n\ndados = pd.read_csv(dados, sep = ';', skiprows = 8, decimal = ',',  encoding = 'latin1')\n\n#visualizando as primeiras linhas da tabela\ndados.head()",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Capítulo – Estudos de Caso: Análise de Dados Meteorológicos</span>"
    ]
  },
  {
    "objectID": "capitulos/cap8-estudo-casos.html#manipulações-iniciais-dos-dados",
    "href": "capitulos/cap8-estudo-casos.html#manipulações-iniciais-dos-dados",
    "title": "7  Capítulo – Estudos de Caso: Análise de Dados Meteorológicos",
    "section": "7.7 Manipulações iniciais dos dados",
    "text": "7.7 Manipulações iniciais dos dados\n#VERIFICANDO TIPO DE DADOS EM CADA COLUNA \n\nprint(dados.dtypes)\n#VERIFICANDO NOMES DE COLUNAS\nprint(dados.columns)\n#RENOMEANDO COLUNAS\ndados = dados.rename(columns={\n    'PRECIPITAÇÃO TOTAL, HORÁRIO (mm)': 'Chuva',\n    'TEMPERATURA DO AR - BULBO SECO, HORARIA (°C)': 'Temperatura'})\n\n#DELETANDO COLUNA\ndados = dados.drop(columns=['Unnamed: 19'])\n\ndados.columns\n#MUDAR TIPO DE DADO DA COLUNA 'Data'\n\ndados['Data'] = pd.to_datetime(dados['Data'], errors='coerce')\n\ndados.dtypes\n# SELECIONAR APENAS AS COLUNAS DESEJADAS\n\ndados_2 = dados[['Data', 'Chuva', 'Temperatura']]\n\ndados_2.head()\n# CRIANDO NOVAS COLUNAS ('Mes' e 'Dia') com as funções .dt.month e .dt.day\n\ndados_2['Mes'] = dados_2['Data'].dt.month\n\ndados_2['Dia'] = dados_2['Data'].dt.day\n\ndados_2.head()",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Capítulo – Estudos de Caso: Análise de Dados Meteorológicos</span>"
    ]
  },
  {
    "objectID": "capitulos/cap8-estudo-casos.html#agrupar-por-mês-e-calcular-média-da-temperatura-máxima",
    "href": "capitulos/cap8-estudo-casos.html#agrupar-por-mês-e-calcular-média-da-temperatura-máxima",
    "title": "7  Capítulo – Estudos de Caso: Análise de Dados Meteorológicos",
    "section": "7.8 Agrupar por mês e calcular média da temperatura máxima",
    "text": "7.8 Agrupar por mês e calcular média da temperatura máxima\nNesta etapa serão utilizadas as funções .groupby para agrupar os dados por mês; .mean() para gerar a média.\n# AGRUPAR DADOS POR MÊS E CALCULAR MÉDIA MENSAL DA TEMPERATURA\n\nmedia_mensal = dados_2.groupby(\"Mes\")['Temperatura'].mean()\n\nmedia_mensal.head()",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Capítulo – Estudos de Caso: Análise de Dados Meteorológicos</span>"
    ]
  },
  {
    "objectID": "capitulos/cap8-estudo-casos.html#gerando-gráfico",
    "href": "capitulos/cap8-estudo-casos.html#gerando-gráfico",
    "title": "7  Capítulo – Estudos de Caso: Análise de Dados Meteorológicos",
    "section": "7.9 Gerando Gráfico",
    "text": "7.9 Gerando Gráfico\n\n\n\n\n\n\n\nElemento\nDescrição\n\n\nsns.lineplot()\nCria o gráfico de linha\n\n\nmarker='o'\nAdiciona marcadores nos pontos\n\n\nlinewidth e color\nControlam espessura e cor da linha\n\n\nplt.xticks()\nSubstitui os números dos meses por nomes abreviados\n\n\nplt.figtext()\nAdiciona uma fonte abaixo do gráfico\n\n\n\n# GRÁFICO DE TEMPERATURA MÉDIA MENSAL\n\nplt.figure(figsize=(10, 6))\nsns.lineplot(data=media_mensal, x='Mes', y='Temperatura', marker='o', linewidth=2.5, color='green')\n\n# PERSONALIZAÇÃO\n\nplt.title(\"Temperatura Média Mensal - São Luís-MA 2024\", fontsize=16)\nplt.xlabel(\"Mês\", fontsize=12)\nplt.ylabel(\"Temperatura (°C)\", fontsize=12)\nplt.grid(True, linestyle='--', alpha=0.5)\n\n# AJUSTAR OS RÓTULOS DOS MESES COM AS ABREVIAÇÕES DOS NOMES DOS MESES\n\nplt.xticks(media_mensal[\"Mes\"], [\"Jan\",\"Fev\",\"Mar\",\"Abr\",\"Mai\",\"Jun\",\"Jul\",\"Ago\",\"Set\",\"Out\",\"Nov\",\"Dez\"])\n\n# FONTE DOS DADOS\n\nplt.figtext(0.5, -0.05, \"Fonte: Estação Meteorológica A203 / INMET\",\n            ha=\"center\", fontsize=10, style='italic')\n\n# EXIBIR GRÁFICO\n\nplt.tight_layout()\n\n# SALVAR GRÁFICO\n\nplt.savefig(\"grafico_temperatura.png\", dpi=300, bbox_inches='tight')\n\nplt.show()\nResultado:\n\n\n\n\n\nPara mais configurações sobre a geração e possibilidades de alterações no gráfico acessar a documentação das bibliotecas Matplotlib e Seaborn\n\n7.9.1 Gráfico alternativo\n# AGRUPANDO POR MÊS PARA OBTER TEMPERATURA MÍNIMA, MÉDIA  E MÁXIMA\n\ntemp_mensal = dados_2.groupby(\"Mes\")[\"Temperatura\"].agg(\n    Tmin=\"min\",\n    Tmed=\"mean\",\n    Tmax=\"max\"\n).reset_index()\n\nprint(temp_mensal.head())\n# NOMES DOS MESES\n\nmeses = [\"Jan\", \"Fev\", \"Mar\", \"Abr\", \"Mai\", \"Jun\", \n         \"Jul\", \"Ago\", \"Set\", \"Out\", \"Nov\", \"Dez\"]\n\n# GRÁFICO DE TEMPERATURAS (MED, MIN E MAX) MENSAL\n\nplt.figure(figsize=(10, 6))\n\nplt.plot(meses, temperatura_mensal[\"Tmin\"], marker='o', color='blue', label='Temp. Mínima')\nplt.plot(meses, temperatura_mensal[\"Tmed\"], marker='o', color='green', label='Temp. Média')\nplt.plot(meses, temperatura_mensal[\"Tmax\"], marker='o', color='red', label='Temp. Máxima')\n\n# PERSONALIZAÇÃO\n\nplt.title(\"Temperaturas Mensais - São Luís/MA (2024)\", fontsize=14)\nplt.xlabel(\"Mês\")\nplt.ylabel(\"Temperatura (°C)\")\nplt.grid(True, linestyle=\"--\", alpha=0.5)\nplt.legend()\n\n# FONTE DOS DADOS\n\nplt.figtext(0.5, -0.05, \"Fonte: Estação Meteorológica A203 / INMET\",\n            ha=\"center\", fontsize=9, style='italic')\n\n# EXIBIR GRÁFICO\n\nplt.tight_layout()\n\n# SALVAR GRÁFICO\n\nplt.savefig(\"grafico_temperatura_2.png\", dpi=300, bbox_inches='tight')\n\nplt.show()",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Capítulo – Estudos de Caso: Análise de Dados Meteorológicos</span>"
    ]
  },
  {
    "objectID": "capitulos/cap8-estudo-casos.html#agrupar-por-mês",
    "href": "capitulos/cap8-estudo-casos.html#agrupar-por-mês",
    "title": "7  Capítulo – Estudos de Caso: Análise de Dados Meteorológicos",
    "section": "8.1 Agrupar por mês",
    "text": "8.1 Agrupar por mês\n# AGRUPAR POR MÊS E SOMAR A PRECIPITAÇÃO\nchuva_mensal = dados_2.groupby(\"Mes\")[\"Chuva\"].sum().reset_index()\n\nchuva_mensal.head()",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Capítulo – Estudos de Caso: Análise de Dados Meteorológicos</span>"
    ]
  },
  {
    "objectID": "capitulos/cap8-estudo-casos.html#gerando-gráfico-1",
    "href": "capitulos/cap8-estudo-casos.html#gerando-gráfico-1",
    "title": "7  Capítulo – Estudos de Caso: Análise de Dados Meteorológicos",
    "section": "8.2 Gerando Gráfico",
    "text": "8.2 Gerando Gráfico\n# GRÁFICO DE PRECIPITAÇÃO ACUMULADA MENSAL\n\nplt.figure(figsize=(10, 6))\nsns.barplot(data=chuva_mensal, x=\"Mes\", y=\"Chuva\", color=\"darkblue\")\n\n# PERSONALIZAÇÃO\n\nplt.title(\"Precipitação Acumulada Mensal - São Luís/MA (2024)\", fontsize=16)\nplt.xlabel(\"Mês\", fontsize=12)\nplt.ylabel(\"Precipitação (mm)\", fontsize=12)\nplt.grid(axis=\"y\", linestyle=\"--\", alpha=0.5)\n\n# AJUSTAR OS RÓTULOS DOS MESES COM AS ABREVIAÇÕES DOS NOMES DOS MESES\n\nplt.xticks(chuva_mensal[\"Mes\"] -1, [\"Jan\",\"Fev\",\"Mar\",\"Abr\",\"Mai\",\"Jun\",\"Jul\",\"Ago\",\"Set\",\"Out\",\"Nov\",\"Dez\"])\n\n# FONTE DOS DADOS\n\nplt.figtext(0.5, -0.05, \"Fonte: Estação Meteorológica A203 / INMET\", \n            ha=\"center\", fontsize=9, style='italic')\n\n# EXIBIR GRÁFICO\n\nplt.tight_layout()\n\n# SALVAR GRÁFICO\n\nplt.savefig(\"precipitacao_mensal.png\", dpi=300, bbox_inches=\"tight\")\n\nplt.show()",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Capítulo – Estudos de Caso: Análise de Dados Meteorológicos</span>"
    ]
  }
]