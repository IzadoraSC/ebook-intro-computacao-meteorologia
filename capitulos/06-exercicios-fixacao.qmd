# Cap√≠tulo 6 ‚Äì Exerc√≠cios de Fixa√ß√£o

Este cap√≠tulo re√∫ne exerc√≠cios pr√°ticos para testar seus conhecimentos adquiridos ao longo dos cap√≠tulos anteriores. Leia com aten√ß√£o cada enunciado, analise os trechos de c√≥digo e escreva suas respostas em um ambiente de programa√ß√£o R.

------------------------------------------------------------------------

## üß± 1. Fundamentos da linguagem R

**1.1** Crie tr√™s objetos com os seguintes valores: - Um n√∫mero inteiro - Um n√∫mero decimal - Uma palavra (texto)

Depois, use a fun√ß√£o `class()` para verificar o tipo de cada um.

**1.2** O que ser√° exibido ao executar o seguinte c√≥digo?

``` r
x <- "30.5"
class(x)
```

(a) numeric‚ÄÉ(b) character‚ÄÉ(c) double‚ÄÉ(d) logical

**1.3** Qual o resultado da seguinte opera√ß√£o?

``` r
a <- 5
b <- 2
a ^ b
```

------------------------------------------------------------------------

## üì¶ 2. Instala√ß√£o e carregamento de pacotes

**2.1** Qual a fun√ß√£o do seguinte comando?

``` r
install.packages("ggplot2")
```

**2.2** O c√≥digo abaixo ir√° funcionar corretamente? Justifique sua resposta.

``` r
install.packages("dados")
library(DADOS)
```

------------------------------------------------------------------------

## üìê 3. Estruturas de Dados

**3.1** Crie: - Um vetor com os nomes de 5 cidades - Uma matriz com temperaturas registradas em 3 dias e 3 hor√°rios - Um data frame com dados de umidade relativa e temperatura m√©dia.

**3.2** O que acontece ao executar este c√≥digo?

``` r
x <- c(3, 5, 7)
x[4]
```

**3.3** Complete o c√≥digo abaixo para acessar a 2¬™ coluna da matriz:

``` r
matriz <- matrix(1:9, nrow = 3)
# ___
```

------------------------------------------------------------------------

## üîÅ 4. Estruturas de Controle

**4.1** O que ser√° impresso pelo seguinte c√≥digo?

``` r
x <- 10
if (x > 5) {
  print("Maior que 5")
} else {
  print("Menor ou igual a 5")
}
```

**4.2** Crie um la√ßo `for` que percorra os n√∫meros de 1 a 5 e imprima cada n√∫mero elevado ao quadrado.

------------------------------------------------------------------------

## üîß 5. Fun√ß√µes

**5.1** Escreva uma fun√ß√£o chamada `soma_quadrados()` que receba dois n√∫meros como entrada e retorne a soma dos quadrados deles.

**5.2** Complete o c√≥digo abaixo para criar uma fun√ß√£o que calcule a amplitude t√©rmica do dia:

``` r
amplitude_termica <- function(tmax, tmin) {
  # ________
}
```

------------------------------------------------------------------------

## üìä 6. Manipula√ß√£o e an√°lise de dados

**6.1** O que faz a fun√ß√£o `read_csv()`? Qual a diferen√ßa em rela√ß√£o ao `read.csv()`?

**6.2** Dado o seguinte trecho de c√≥digo:

``` r
library(dplyr)
dados <- tibble::tibble(
  dia = c("Seg", "Ter", "Qua"),
  temp = c(28.4, 30.1, 27.9)
)

dados %>%
  filter(temp > 28)
```

O que ser√° retornado?

**6.3** Crie um pequeno conjunto de dados com 5 dias e temperaturas. Depois, use `mutate()` para criar uma coluna com a classifica√ß√£o: - at√© 28¬∞C = "Agrad√°vel" - acima de 28¬∞C = "Quente"

------------------------------------------------------------------------

## ‚úçÔ∏è Desafio

Crie um script que: - Leia um vetor de temperaturas - Calcule a m√©dia - Classifique os dias como ‚Äúquente‚Äù se estiverem acima da m√©dia - Imprima a lista de classifica√ß√µes
